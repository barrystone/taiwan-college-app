{"version":3,"sources":["hooks/useWindowSize.tsx","assets/images/cleaning-white.svg","assets/images/logo.svg","layout/Header.tsx","assets/images/collegeType-1.svg","assets/images/collegeType-2.svg","assets/images/collegeType-3.svg","assets/images/medal-1.svg","assets/images/medal-2.svg","assets/images/medal-3.svg","components/College.tsx","components/AllColleges.tsx","assets/images/top-arrow.svg","pages/Home.tsx","assets/images/back-arrow.svg","layout/CollegeDetail/LeftTop.tsx","components/PercentGauge.tsx","layout/CollegeDetail/LeftMid.tsx","components/RatioScatter.tsx","layout/CollegeDetail/LeftBottom.tsx","components/PieChart.tsx","layout/CollegeDetail/Right.tsx","pages/CollegeDetail.tsx","App.tsx","reportWebVitals.ts","index.tsx"],"names":["useWindowSize","windowSize","setWindowSize","useState","width","undefined","height","useEffect","handleResize","window","innerWidth","innerHeight","addEventListener","removeEventListener","Header","_ref","changeSchoolYear","changeSchoolType","changeIsPublic","changeSortPercent","schoolYear","schoolType","isPublic","sortPercent","changeOnSearchFieldValue","afterFileterLength","cleanSelectState","searchFieldValue","setSearchFieldValue","screen","_jsx","_Fragment","children","_jsxs","Navbar","expand","bg","variant","fixed","style","borderBottom","Brand","href","Row","marginLeft","Col","xs","display","justifyContent","alignItems","src","logoIcon","alt","fontSize","Toggle","Collapse","id","Nav","className","NavDropdown","title","Item","onClick","Divider","border","borderRadius","color","cleanIcon","cursor","Form","inline","margin","xl","md","FormControl","type","placeholder","onChange","e","target","value","onKeyDown","key","Button","College","data","rank","Card","borderColor","medal1","medal2","medal3","position","left","top","Img","collegeType1Image","collegeType2Image","collegeType3Image","maxHeight","Body","Title","Text","Badge","pill","ProgressBar","marginTop","marginBottom","now","Number","backgroundColor","label","Link","to","concat","AllColleges","allColleges","onSearchFieldValue","changeAfterFileterLength","displayColleges","setDisplayColleges","sortAllColleges","array","sortedArray","map","unshift","sort","shift","reverse","filter","includes","Container","fluid","paddingTop","lg","sm","college","idx","length","indexOf","Home","setSchoolYear","setIsPublic","setSchoolType","setSortPercent","setOnSearchFieldValue","setAfterFileterLength","x","scrollToTop","scrollTo","behavior","topIcon","testingTopBgImage","LeftTop","schoolImage","padding","maxWidth","zIndex","backgroundSize","backgroundImage","backgroundRepeat","backgroundPosition","PercentGauge","latestPercentage","option","series","progress","show","itemStyle","shadowBlur","shadowOffsetX","shadowOffsetY","axisLine","lineStyle","axisTick","splitLine","axisLabel","distance","detail","valueAnimation","offsetCenter","formatter","flexDirection","ReactECharts","LeftMid","lastCollegeData","latestName","latestPublicType","latestSchoolType","meSymbolUrl","location","origin","RatioScatter","formatRatioScatterData","avgData","avg","cutComma","replace","othersData","others","meData","me","text","textStyle","lineHeight","fontFamily","subtext","subtextStyle","align","sublink","subtarget","grid","right","bottom","containLabel","xAxis","scale","yAxis","tooltip","params","console","log","seriesName","dataIndex","legend","name","icon","z","symbolSize","symbol","LeftBottom","studentsLatestYearsAvg","teachersLatestYearsAvg","latestYear","latestRatio","latestStuCount","stuTchLatestRatio","req","stuTch108RatioAvg","toFixed","i","buttomPartRatioScatterColLg","PieChart","formatPieChartData","eChartsRef","React","useRef","setOption","defaultOption","trigger","dataset","source","gridIndex","smooth","seriesLayoutBy","emphasis","focus","studentsAvg","teachersAvg","radius","center","encode","itemName","ref","onChartReady","echarts","onEvents","legendselectchanged","param","updateAxisPointer","event","axesInfo","dimensionValue","option2","_eChartsRef$current","current","getEchartsInstance","Right","collegeData","studentsAllYearsAvg","teachersAllYearsAvg","yearCollegeData","index","CollegeDetail","match","slice","clacAvg","year","stuOrTch","indexOfData","whichYearData","reduce","acc","cur","bottomPartFlexDirection","borderRight","BackArrowIcon","gridTemplateRows","App","setAllColeges","async","res","fetch","process","values","json","getAllColleges","Router","Switch","Route","exact","path","component","props","reportWebVitals","onPerfEntry","Function","then","getCLS","getFID","getFCP","getLCP","getTTFB","ReactDOM","render","StrictMode","document","getElementById"],"mappings":"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","file":"static/js/main.f243c353.chunk.js","sourcesContent":["import { useState, useEffect } from 'react';\r\n\r\n// Define general type for useWindowSize hook, which includes width and height\r\ninterface Size {\r\n  width: number | undefined;\r\n  height: number | undefined;\r\n}\r\n\r\nexport default function useWindowSize(): Size {\r\n  // Initialize state with undefined width/height so server and client renders match\r\n  // Learn more here: https://joshwcomeau.com/react/the-perils-of-rehydration/\r\n  const [windowSize, setWindowSize] = useState<Size>({\r\n    width: undefined,\r\n    height: undefined,\r\n  });\r\n  useEffect(() => {\r\n    // Handler to call on window resize\r\n    function handleResize() {\r\n      // Set window width/height to state\r\n      setWindowSize({\r\n        width: window.innerWidth,\r\n        height: window.innerHeight,\r\n      });\r\n    }\r\n    // Add event listener\r\n    window.addEventListener('resize', handleResize);\r\n    // Call handler right away so state gets updated with initial window size\r\n    handleResize();\r\n    // Remove event listener on cleanup\r\n    return () => window.removeEventListener('resize', handleResize);\r\n  }, [setWindowSize]); // Empty array ensures that effect is only run on mount\r\n\r\n  return windowSize;\r\n}\r\n","export default __webpack_public_path__ + \"static/media/cleaning-white.19c37fca.svg\";","export default __webpack_public_path__ + \"static/media/logo.43a5e574.svg\";","import { useState } from 'react';\r\nimport useWindowSize from '../hooks/useWindowSize';\r\nimport {\r\n  Button,\r\n  Form,\r\n  FormControl,\r\n  Nav,\r\n  Navbar,\r\n  NavDropdown,\r\n  Col,\r\n  Row,\r\n} from 'react-bootstrap';\r\n\r\nimport cleanIcon from '../assets/images/cleaning-white.svg';\r\nimport logoIcon from '../assets/images/logo.svg';\r\n\r\ninterface Props {\r\n  changeSchoolYear: Function;\r\n  changeSchoolType: Function;\r\n  changeIsPublic: Function;\r\n  changeSortPercent: Function;\r\n  changeOnSearchFieldValue: Function;\r\n  schoolYear: string;\r\n  schoolType: string;\r\n  isPublic: string;\r\n  sortPercent: string;\r\n  afterFileterLength: Number;\r\n  cleanSelectState: Function;\r\n}\r\n\r\nconst Header = ({\r\n  changeSchoolYear,\r\n  changeSchoolType,\r\n  changeIsPublic,\r\n  changeSortPercent,\r\n  schoolYear,\r\n  schoolType,\r\n  isPublic,\r\n  sortPercent,\r\n  changeOnSearchFieldValue,\r\n  afterFileterLength,\r\n  cleanSelectState,\r\n}: Props) => {\r\n  const [searchFieldValue, setSearchFieldValue] = useState('');\r\n\r\n  const screen = useWindowSize();\r\n\r\n  return (\r\n    <>\r\n      <Navbar\r\n        expand=\"lg\"\r\n        bg=\"dark\"\r\n        variant=\"dark\"\r\n        fixed=\"top\"\r\n        // sticky=\"top\"\r\n        style={{\r\n          borderBottom: '3px solid white',\r\n        }}\r\n      >\r\n        <Navbar.Brand href=\"/\">\r\n          <Row\r\n            style={\r\n              (screen.width as any) > 350\r\n                ? { width: '250px' }\r\n                : { width: '200px', marginLeft: '1px' }\r\n            }\r\n          >\r\n            <Col\r\n              xs={0}\r\n              style={{\r\n                display: 'flex',\r\n                justifyContent: 'center',\r\n                alignItems: 'center',\r\n              }}\r\n            >\r\n              {(screen.width as any) > 350 ? (\r\n                <img src={logoIcon} alt=\"logo\" style={{ height: '40px' }} />\r\n              ) : (\r\n                ''\r\n              )}\r\n              台灣大專校院{' '}\r\n              <b style={{ marginLeft: '5px', fontSize: '20px' }}>生師比</b>{' '}\r\n            </Col>\r\n          </Row>\r\n        </Navbar.Brand>\r\n        <Navbar.Toggle aria-controls=\"basic-navbar-nav\" />\r\n        <Navbar.Collapse id=\"basic-navbar-nav\">\r\n          <Nav className=\"mr-auto\">\r\n            <Col>\r\n              <NavDropdown title={schoolYear + ' 學年'} id=\"basic-nav-dropdown\">\r\n                <NavDropdown.Item\r\n                  onClick={() => changeSchoolYear('108')}\r\n                  href=\"#action/3.4\"\r\n                >\r\n                  108\r\n                </NavDropdown.Item>\r\n                <NavDropdown.Item\r\n                  onClick={() => changeSchoolYear('107')}\r\n                  href=\"#action/3.3\"\r\n                >\r\n                  107\r\n                </NavDropdown.Item>\r\n                <NavDropdown.Item\r\n                  onClick={() => changeSchoolYear('106')}\r\n                  href=\"#action/3.2\"\r\n                >\r\n                  106\r\n                </NavDropdown.Item>\r\n              </NavDropdown>\r\n            </Col>\r\n            <Col>\r\n              <NavDropdown\r\n                title={isPublic === 'all' ? '公私立' : isPublic}\r\n                id=\"basic-nav-dropdown\"\r\n              >\r\n                <NavDropdown.Item\r\n                  href=\"#action/3.1\"\r\n                  onClick={() => changeIsPublic('all')}\r\n                >\r\n                  全部\r\n                </NavDropdown.Item>\r\n                <NavDropdown.Divider />\r\n                <NavDropdown.Item\r\n                  onClick={() => changeIsPublic('公立')}\r\n                  href=\"#action/3.2\"\r\n                >\r\n                  公立\r\n                </NavDropdown.Item>\r\n                <NavDropdown.Item\r\n                  onClick={() => changeIsPublic('私立')}\r\n                  href=\"#action/3.3\"\r\n                >\r\n                  私立\r\n                </NavDropdown.Item>\r\n              </NavDropdown>\r\n            </Col>\r\n            <Col>\r\n              <NavDropdown\r\n                title={schoolType === 'all' ? '全部學校類別' : schoolType}\r\n                id=\"basic-nav-dropdown\"\r\n              >\r\n                <NavDropdown.Item\r\n                  href=\"#action/3.1\"\r\n                  onClick={() => changeSchoolType('all')}\r\n                >\r\n                  全部\r\n                </NavDropdown.Item>\r\n                <NavDropdown.Divider />\r\n                <NavDropdown.Item\r\n                  onClick={() => changeSchoolType('一般大學')}\r\n                  href=\"#action/3.2\"\r\n                >\r\n                  一般大學\r\n                </NavDropdown.Item>\r\n                <NavDropdown.Item\r\n                  onClick={() => changeSchoolType('技專校院')}\r\n                  href=\"#action/3.3\"\r\n                >\r\n                  技專校院\r\n                </NavDropdown.Item>\r\n                <NavDropdown.Item\r\n                  onClick={() => changeSchoolType('宗教研修學院')}\r\n                  href=\"#action/3.4\"\r\n                >\r\n                  宗教研修學院\r\n                </NavDropdown.Item>\r\n              </NavDropdown>\r\n            </Col>\r\n            <Col>\r\n              <NavDropdown\r\n                style={{\r\n                  border: '1px solid #57606f',\r\n                  borderRadius: '10px',\r\n                }}\r\n                title={\r\n                  sortPercent === 'no'\r\n                    ? '未排序'\r\n                    : sortPercent === 'inc'\r\n                    ? '遞增'\r\n                    : '遞減'\r\n                }\r\n                id=\"basic-nav-dropdown\"\r\n              >\r\n                <NavDropdown.Item\r\n                  href=\"#action/3.1\"\r\n                  onClick={() => changeSortPercent('no')}\r\n                >\r\n                  未排序\r\n                </NavDropdown.Item>\r\n                <NavDropdown.Divider />\r\n                <NavDropdown.Item\r\n                  onClick={() => changeSortPercent('dec')}\r\n                  href=\"#action/3.3\"\r\n                >\r\n                  遞減\r\n                </NavDropdown.Item>\r\n                <NavDropdown.Item\r\n                  onClick={() => changeSortPercent('inc')}\r\n                  href=\"#action/3.2\"\r\n                >\r\n                  遞增\r\n                </NavDropdown.Item>\r\n              </NavDropdown>\r\n            </Col>\r\n            <Col\r\n              style={{\r\n                display: 'flex',\r\n                justifyContent: 'center',\r\n                alignItems: 'center',\r\n              }}\r\n            >\r\n              <div\r\n                style={{\r\n                  fontSize: '15px',\r\n                  color: 'white',\r\n                  width: '100px',\r\n                }}\r\n              >\r\n                剩{' '}\r\n                <span\r\n                  style={{\r\n                    fontSize: '20px',\r\n                  }}\r\n                >\r\n                  {afterFileterLength}\r\n                </span>{' '}\r\n                間\r\n              </div>\r\n            </Col>\r\n            <Col\r\n              style={{\r\n                display: 'flex',\r\n                justifyContent: 'center',\r\n                alignItems: 'center',\r\n              }}\r\n            >\r\n              <img\r\n                src={cleanIcon}\r\n                alt=\"cleanIcon\"\r\n                style={{ height: '20px', cursor: 'pointer' }}\r\n                onClick={() => cleanSelectState()}\r\n              />\r\n            </Col>\r\n          </Nav>\r\n          <Form inline>\r\n            <Row style={{ margin: '5px auto' }}>\r\n              <Col\r\n                xl={8}\r\n                md={12}\r\n                style={{ display: 'flex', alignItems: 'center' }}\r\n              >\r\n                <FormControl\r\n                  style={{ width: '100%', margin: '5px 0' }}\r\n                  // className=\"mr-sm-1\"\r\n                  type=\"text\"\r\n                  placeholder=\"學校名稱...\"\r\n                  onChange={(e) => {\r\n                    if (e.target.value === '') {\r\n                      changeOnSearchFieldValue(e.target.value);\r\n                    }\r\n                    setSearchFieldValue(e.target.value);\r\n                  }}\r\n                  value={searchFieldValue}\r\n                  onKeyDown={(e: any) => {\r\n                    if (e.key === 'Enter') {\r\n                      changeOnSearchFieldValue(searchFieldValue);\r\n                    }\r\n                  }}\r\n                />\r\n              </Col>\r\n              <Col xl={4} md={0}>\r\n                {(screen.width as any) >= 1200 ||\r\n                (screen.width as any) < 992 ? (\r\n                  <Button\r\n                    variant=\"outline-light\"\r\n                    onClick={() => changeOnSearchFieldValue(searchFieldValue)}\r\n                    style={{ margin: '5px 0' }}\r\n                  >\r\n                    搜尋\r\n                  </Button>\r\n                ) : (\r\n                  ''\r\n                )}\r\n              </Col>\r\n            </Row>\r\n          </Form>\r\n        </Navbar.Collapse>\r\n      </Navbar>\r\n    </>\r\n  );\r\n};\r\n\r\nexport default Header;\r\n","export default __webpack_public_path__ + \"static/media/collegeType-1.42efa094.svg\";","export default __webpack_public_path__ + \"static/media/collegeType-2.5f45bc1e.svg\";","export default __webpack_public_path__ + \"static/media/collegeType-3.4e1228f2.svg\";","export default __webpack_public_path__ + \"static/media/medal-1.e4575def.svg\";","export default __webpack_public_path__ + \"static/media/medal-2.a115f5fc.svg\";","export default __webpack_public_path__ + \"static/media/medal-3.66799ff8.svg\";","import { Link } from 'react-router-dom';\r\nimport { Card, Button, Badge, ProgressBar } from 'react-bootstrap';\r\n\r\nimport collegeType1Image from '../assets/images/collegeType-1.svg';\r\nimport collegeType2Image from '../assets/images/collegeType-2.svg';\r\nimport collegeType3Image from '../assets/images/collegeType-3.svg';\r\nimport medal1 from '../assets/images/medal-1.svg';\r\nimport medal2 from '../assets/images/medal-2.svg';\r\nimport medal3 from '../assets/images/medal-3.svg';\r\n\r\ninterface Props {\r\n  data: Array<string>;\r\n  rank: number;\r\n}\r\n\r\nconst College = ({ data, rank }: Props) => {\r\n  return (\r\n    <>\r\n      <Card style={{ borderColor: 'black' }}>\r\n        <div\r\n          style={{\r\n            height: '150px',\r\n            display: 'flex',\r\n            justifyContent: 'center',\r\n            alignItems: 'center',\r\n          }}\r\n        >\r\n          <div>\r\n            {rank ? (\r\n              rank <= 3 ? (\r\n                <img\r\n                  src={rank === 1 ? medal1 : rank === 2 ? medal2 : medal3}\r\n                  alt={rank === 1 ? 'first' : rank === 2 ? 'second' : 'third'}\r\n                  style={{\r\n                    position: 'absolute',\r\n                    height: '60px',\r\n                    left: '5px',\r\n                    top: '8px',\r\n                  }}\r\n                />\r\n              ) : (\r\n                <span\r\n                  style={{\r\n                    position: 'absolute',\r\n                    display: 'flex',\r\n                    justifyContent: 'center',\r\n                    alignItems: 'center',\r\n                    height: '40px',\r\n                    width: '40px',\r\n                    left: '10px',\r\n                    top: '10px',\r\n                    fontSize: '18px',\r\n                    border: '1px black solid',\r\n                    borderRadius: '50%',\r\n                  }}\r\n                >\r\n                  {rank}\r\n                </span>\r\n              )\r\n            ) : (\r\n              ''\r\n            )}\r\n          </div>\r\n          <Card.Img\r\n            variant=\"top\"\r\n            src={\r\n              data[2] === '一般大學'\r\n                ? collegeType1Image\r\n                : data[2] === '技專校院'\r\n                ? collegeType2Image\r\n                : collegeType3Image\r\n            }\r\n            style={{ maxHeight: '100px', width: 'auto' }}\r\n          ></Card.Img>\r\n        </div>\r\n        <Card.Body>\r\n          <Card.Title>{data[4]}</Card.Title>\r\n          <Card.Text>\r\n            <Badge pill variant=\"danger\">\r\n              {data[0]}\r\n            </Badge>{' '}\r\n            {data[2] === '一般大學' ? (\r\n              <Badge variant=\"primary\">一般大學</Badge>\r\n            ) : data[2] === '技專校院' ? (\r\n              <Badge variant=\"secondary\">技專校院</Badge>\r\n            ) : (\r\n              <Badge variant=\"danger\">宗教研修學院</Badge>\r\n            )}{' '}\r\n            {data[1] === '公立' ? (\r\n              <Badge variant=\"success\">公立</Badge>\r\n            ) : (\r\n              <Badge variant=\"info\">私立</Badge>\r\n            )}\r\n            <br />\r\n            <ProgressBar\r\n              style={{\r\n                marginTop: '12px',\r\n                marginBottom: '10px',\r\n                height: '12px',\r\n              }}\r\n            >\r\n              <ProgressBar\r\n                now={Number(data[8])}\r\n                key={1}\r\n                style={{\r\n                  backgroundColor: '#e67e22',\r\n                  fontSize: '10px',\r\n                }}\r\n                label={'學生'}\r\n              />\r\n              <ProgressBar\r\n                now={100 - Number(data[8])}\r\n                key={2}\r\n                style={{ backgroundColor: '#bdc3c7' }}\r\n              />\r\n            </ProgressBar>\r\n            <p style={{ fontSize: '20px' }}>\r\n              {Number(data[8])} <span style={{ fontSize: '12px' }}> %</span>\r\n            </p>\r\n          </Card.Text>\r\n          <Link to={`detail/${data[3]}`}>\r\n            <Button\r\n              variant=\"warning\"\r\n              style={{\r\n                backgroundColor: '#f7b731',\r\n                border: '1px solid grey',\r\n              }}\r\n            >\r\n              生師比\r\n            </Button>\r\n          </Link>\r\n        </Card.Body>\r\n      </Card>\r\n    </>\r\n  );\r\n};\r\n\r\nexport default College;\r\n","import { useState, useEffect } from 'react';\r\nimport { Row, Col, Container } from 'react-bootstrap';\r\nimport College from './College';\r\n\r\ninterface Props {\r\n  allColleges: Array<string[]>;\r\n  schoolYear: string;\r\n  schoolType: string;\r\n  isPublic: string;\r\n  sortPercent: string;\r\n  onSearchFieldValue: string;\r\n  changeAfterFileterLength: Function;\r\n}\r\n\r\nconst AllColleges = ({\r\n  allColleges,\r\n  schoolYear,\r\n  schoolType,\r\n  isPublic,\r\n  sortPercent,\r\n  onSearchFieldValue,\r\n  changeAfterFileterLength,\r\n}: Props) => {\r\n  const [displayColleges, setDisplayColleges] = useState(allColleges);\r\n\r\n  const sortAllColleges = (array: Array<string[]>) => {\r\n    let sortedArray: Array<string[]> = [...array];\r\n    changeAfterFileterLength(array);\r\n\r\n    if (sortPercent === 'inc') {\r\n      sortedArray.map((e) => e.unshift(e[8]));\r\n      sortedArray.sort();\r\n      sortedArray.map((e) => e.shift());\r\n\r\n      return sortedArray;\r\n    } else if (sortPercent === 'dec') {\r\n      sortedArray.map((e) => e.unshift(e[8]));\r\n      sortedArray.sort().reverse();\r\n      sortedArray.map((e) => e.shift());\r\n\r\n      return sortedArray;\r\n    } else {\r\n      return sortedArray.sort();\r\n    }\r\n  };\r\n\r\n  useEffect(() => {\r\n    const filterAllColleges = () => {\r\n      if (isPublic === 'all' && schoolType === 'all') {\r\n        setDisplayColleges(\r\n          sortAllColleges(\r\n            allColleges\r\n              .filter((e) => e[0] === schoolYear)\r\n              .filter((e) => e[4].includes(onSearchFieldValue))\r\n          )\r\n        );\r\n      } else if (isPublic === 'all' && schoolType !== 'all') {\r\n        setDisplayColleges(\r\n          sortAllColleges(\r\n            allColleges\r\n              .filter((e) => e[0] === schoolYear)\r\n              .filter((e) => e[2] === schoolType)\r\n              .filter((e) => e[4].includes(onSearchFieldValue))\r\n          )\r\n        );\r\n      } else if (isPublic !== 'all' && schoolType === 'all') {\r\n        setDisplayColleges(\r\n          sortAllColleges(\r\n            allColleges\r\n              .filter((e) => e[0] === schoolYear)\r\n              .filter((e) => e[1] === isPublic)\r\n              .filter((e) => e[4].includes(onSearchFieldValue))\r\n          )\r\n        );\r\n      } else {\r\n        setDisplayColleges(\r\n          sortAllColleges(\r\n            allColleges\r\n              .filter((e) => e[0] === schoolYear)\r\n              .filter((e) => e[2] === schoolType)\r\n              .filter((e) => e[1] === isPublic)\r\n              .filter((e) => e[4].includes(onSearchFieldValue))\r\n          )\r\n        );\r\n      }\r\n    };\r\n\r\n    filterAllColleges();\r\n  }, [\r\n    allColleges,\r\n    schoolYear,\r\n    isPublic,\r\n    schoolType,\r\n    sortPercent,\r\n    onSearchFieldValue,\r\n  ]);\r\n\r\n  return (\r\n    <>\r\n      <Container\r\n        fluid={true}\r\n        style={{ paddingTop: '90px', backgroundColor: '#000' }}\r\n      >\r\n        <Row lg={5} md={3} sm={2} xs={1}>\r\n          {displayColleges.map((college, idx) => (\r\n            <Col key={idx} style={{ margin: '15px 0' }}>\r\n              <College\r\n                data={college}\r\n                rank={\r\n                  sortPercent === 'inc'\r\n                    ? displayColleges.length - displayColleges.indexOf(college)\r\n                    : sortPercent === 'dec'\r\n                    ? displayColleges.indexOf(college) + 1\r\n                    : 0\r\n                }\r\n              />\r\n            </Col>\r\n          ))}\r\n        </Row>\r\n      </Container>\r\n    </>\r\n  );\r\n};\r\n\r\nexport default AllColleges;\r\n","export default __webpack_public_path__ + \"static/media/top-arrow.f2acb447.svg\";","import { useState } from 'react';\r\n\r\nimport Header from '../layout/Header';\r\nimport AllColleges from '../components/AllColleges';\r\nimport topIcon from '../assets/images/top-arrow.svg';\r\n\r\ninterface Props {\r\n  allColleges: Array<string[]>;\r\n}\r\n\r\nconst Home = ({ allColleges }: Props) => {\r\n  const [schoolYear, setSchoolYear] = useState('108');\r\n  const [isPublic, setIsPublic] = useState('all');\r\n  const [schoolType, setSchoolType] = useState('all');\r\n  const [sortPercent, setSortPercent] = useState('no');\r\n  const [onSearchFieldValue, setOnSearchFieldValue] = useState('');\r\n  const [afterFileterLength, setAfterFileterLength] = useState(0);\r\n\r\n  const changeSchoolYear = (x: string) => {\r\n    setSchoolYear(x);\r\n  };\r\n  const changeSchoolType = (x: string) => {\r\n    setSchoolType(x);\r\n  };\r\n  const changeIsPublic = (x: string) => {\r\n    setIsPublic(x);\r\n  };\r\n  const changeSortPercent = (x: string) => {\r\n    setSortPercent(x);\r\n  };\r\n  const changeOnSearchFieldValue = (x: string) => {\r\n    setOnSearchFieldValue(x);\r\n  };\r\n\r\n  const changeAfterFileterLength = (x: Array<string[]>) => {\r\n    setAfterFileterLength(x.length);\r\n  };\r\n\r\n  const cleanSelectState = () => {\r\n    setSchoolYear('108');\r\n    setSchoolType('all');\r\n    setIsPublic('all');\r\n    setOnSearchFieldValue('');\r\n    // setSortPercent('no');\r\n  };\r\n\r\n  const scrollToTop = () => {\r\n    window.scrollTo({ top: 0, behavior: 'smooth' });\r\n  };\r\n\r\n  return (\r\n    <>\r\n      <Header\r\n        changeSchoolYear={changeSchoolYear}\r\n        schoolYear={schoolYear}\r\n        changeSchoolType={changeSchoolType}\r\n        schoolType={schoolType}\r\n        changeIsPublic={changeIsPublic}\r\n        isPublic={isPublic}\r\n        changeSortPercent={changeSortPercent}\r\n        sortPercent={sortPercent}\r\n        changeOnSearchFieldValue={changeOnSearchFieldValue}\r\n        afterFileterLength={afterFileterLength}\r\n        cleanSelectState={cleanSelectState}\r\n      />\r\n      <main>\r\n        <AllColleges\r\n          allColleges={allColleges}\r\n          schoolYear={schoolYear}\r\n          schoolType={schoolType}\r\n          isPublic={isPublic}\r\n          sortPercent={sortPercent}\r\n          onSearchFieldValue={onSearchFieldValue}\r\n          changeAfterFileterLength={changeAfterFileterLength}\r\n        />\r\n      </main>\r\n      <button onClick={scrollToTop} className=\"home__backtotop\">\r\n        <img src={topIcon} alt=\"top-icon\" className=\"home__backtotop-icon\" />\r\n      </button>\r\n    </>\r\n  );\r\n};\r\n\r\nexport default Home;\r\n","export default __webpack_public_path__ + \"static/media/back-arrow.53678069.svg\";","import { useState } from 'react';\r\nimport { Col } from 'react-bootstrap';\r\n\r\n// import Image1f from '../../assets/images/slideShow/1.jpg';\r\nconst testingSchoolImage =\r\n  'https://encrypted-tbn0.gstatic.com/images?q=tbn:ANd9GcTMPzc49UKbhDRVpqL332Dn3cXoGfrW6tOMs6rNqfvakx2LKUscxMdQPMc&s';\r\n\r\nconst testingTopBgImage = [\r\n  'https://images.unsplash.com/photo-1523050854058-8df90110c9f1?ixid=MnwxMjA3fDB8MHxwaG90by1wYWdlfHx8fGVufDB8fHx8&ixlib=rb-1.2.1&auto=format&fit=crop&w=1350&q=80',\r\n  'https://images.unsplash.com/photo-1535982330050-f1c2fb79ff78?ixlib=rb-1.2.1&ixid=MnwxMjA3fDB8MHxwaG90by1wYWdlfHx8fGVufDB8fHx8&auto=format&fit=crop&w=1267&q=80',\r\n];\r\n\r\nconst LeftTop = () => {\r\n  const [\r\n    schoolImage,\r\n    // , setSchoolImage\r\n  ] = useState(testingSchoolImage);\r\n  // Request custom google search api to search first image we found.\r\n  // const searchImage = async (schoolName: string) => {\r\n  //   const res = await fetch(\r\n  //     `${process.env.REACT_APP_GOOGLE_CUSTOMSEARCH_API_BASE}/?key=${process.env.REACT_APP_GOOGLE_API_KEY}&cx=${process.env.REACT_APP_GOOGLE_CUSTOMSEARCH_ENGINE_ID}&searchType=image&q=${schoolName}`\r\n  //   );\r\n  //   const data = await res.json();\r\n\r\n  //   if (data.items == null) {\r\n  //     return;\r\n  //   }\r\n  //   const imageUrl = data.items[0].image.thumbnailLink;\r\n  //   setSchoolImage(imageUrl);\r\n  // };\r\n\r\n  // useEffect(() => {\r\n  //   // searchImage(latestName);\r\n  //   // console.log('schoolImage', schoolImage);\r\n  // }, []);\r\n  return (\r\n    <>\r\n      <Col\r\n        lg={3}\r\n        md={3}\r\n        sm={12}\r\n        xs={12}\r\n        style={{\r\n          // backgroundColor: 'red',\r\n          padding: 0,\r\n          height: '100%',\r\n          display: 'flex',\r\n          justifyContent: 'center',\r\n          alignItems: 'flex-end',\r\n        }}\r\n      >\r\n        <div\r\n          style={{\r\n            height: '50%',\r\n          }}\r\n        >\r\n          <img\r\n            src={schoolImage}\r\n            alt=\"school-image\"\r\n            style={{\r\n              maxWidth: '100%',\r\n              height: 'auto',\r\n              maxHeight: '100%',\r\n              zIndex: 1,\r\n            }}\r\n          />\r\n        </div>\r\n      </Col>\r\n      <Col\r\n        lg={9}\r\n        md={9}\r\n        sm={12}\r\n        xs={12}\r\n        style={{\r\n          padding: '0',\r\n          height: '100%',\r\n          backgroundSize: 'contain',\r\n          backgroundImage: `url(${testingTopBgImage[1]})`,\r\n          backgroundRepeat: 'no-repeat',\r\n          backgroundPosition: 'right',\r\n        }}\r\n      ></Col>\r\n    </>\r\n  );\r\n};\r\n\r\nexport default LeftTop;\r\n","import ReactECharts from 'echarts-for-react';\r\n\r\ninterface Props {\r\n  latestPercentage: string;\r\n}\r\n\r\nconst PercentGauge = ({ latestPercentage }: Props) => {\r\n  const option = {\r\n    series: [\r\n      {\r\n        type: 'gauge',\r\n        progress: {\r\n          show: true,\r\n          width: 13,\r\n        },\r\n        itemStyle: {\r\n          color: '#e67e22',\r\n          // color: 'grey',\r\n          shadowBlur: 2,\r\n          shadowOffsetX: 1,\r\n          shadowOffsetY: 1,\r\n        },\r\n        axisLine: {\r\n          lineStyle: {\r\n            width: 2,\r\n          },\r\n        },\r\n        axisTick: {\r\n          show: false,\r\n        },\r\n        splitLine: {\r\n          length: 3,\r\n          lineStyle: {\r\n            width: 1,\r\n            color: '#999',\r\n          },\r\n        },\r\n        axisLabel: {\r\n          distance: 5,\r\n          color: '#7f8c8d',\r\n          fontSize: 5,\r\n        },\r\n        title: {\r\n          show: false,\r\n        },\r\n        detail: {\r\n          valueAnimation: true,\r\n          fontSize: 20,\r\n          offsetCenter: [2, '110%'],\r\n          formatter: function (value: number) {\r\n            return value + '%';\r\n          },\r\n        },\r\n        data: [\r\n          {\r\n            value: Number(latestPercentage),\r\n          },\r\n        ],\r\n      },\r\n    ],\r\n  };\r\n\r\n  return (\r\n    <div\r\n      style={{\r\n        width: '100%',\r\n        height: '100%',\r\n        display: 'flex',\r\n        flexDirection: 'column',\r\n        justifyContent: 'center',\r\n        alignItems: 'center',\r\n      }}\r\n    >\r\n      <ReactECharts\r\n        option={option}\r\n        style={{\r\n          width: '90%',\r\n          height: '90%',\r\n          paddingTop: '10%',\r\n        }}\r\n      />\r\n      <span style={{ marginLeft: '-2%', fontSize: '12px' }}>學生佔比</span>\r\n    </div>\r\n  );\r\n};\r\n\r\nexport default PercentGauge;\r\n","import React from 'react';\r\nimport { Col, Badge } from 'react-bootstrap';\r\n\r\nimport PercentGauge from '../../components/PercentGauge';\r\n\r\ninterface Props {\r\n  lastCollegeData: Array<string[]>;\r\n  latestName: string;\r\n}\r\n\r\nconst LeftMid = ({ lastCollegeData, latestName }: Props) => {\r\n  const latestPublicType = lastCollegeData.map((x) => x[1])[0];\r\n  const latestSchoolType = lastCollegeData.map((x) => x[2])[0];\r\n  const latestPercentage = lastCollegeData.map((x) => x[8])[0];\r\n\r\n  return (\r\n    <>\r\n      <Col lg={3}>\r\n        <h4>\r\n          {latestSchoolType === '宗教研修學院' ? (\r\n            <Badge variant=\"danger\">宗教研修學院</Badge>\r\n          ) : latestSchoolType === '技專校院' ? (\r\n            <Badge variant=\"secondary\">技專校院</Badge>\r\n          ) : (\r\n            <Badge variant=\"primary\">一般大學</Badge>\r\n          )}{' '}\r\n        </h4>\r\n        <h4>\r\n          {latestPublicType === '私立' ? (\r\n            <Badge variant=\"info\">私立</Badge>\r\n          ) : (\r\n            <Badge variant=\"success\">公立</Badge>\r\n          )}\r\n        </h4>\r\n      </Col>\r\n      <Col lg={6}>\r\n        <h1>{latestName}</h1>\r\n      </Col>\r\n      <Col\r\n        lg={3}\r\n        style={{\r\n          height: '100%',\r\n          display: 'flex',\r\n          justifyContent: 'center',\r\n          alignItems: 'center'\r\n        }}\r\n      >\r\n        <PercentGauge latestPercentage={latestPercentage} />\r\n      </Col>\r\n    </>\r\n  );\r\n};\r\n\r\nexport default LeftMid;\r\n","import ReactECharts from 'echarts-for-react';\r\n\r\n// Display icon of This college on scatter (I am using logo url).\r\nconst meSymbolUrl = `${window.location.origin}/static/media/logo.bca62d69.svg`;\r\n\r\ninterface Props {\r\n  formatRatioScatterData: {\r\n    avg: Array<string>;\r\n    me: Array<string>;\r\n    others: Array<string[]>;\r\n  };\r\n}\r\n\r\nconst RatioScatter = ({ formatRatioScatterData }: Props) => {\r\n  const avgData = [\r\n    Number(formatRatioScatterData.avg[0]),\r\n    Number(formatRatioScatterData.avg[1]),\r\n  ];\r\n  const cutComma = (x: string) => {\r\n    return (x + '').replace(',', '');\r\n  };\r\n\r\n  const othersData = formatRatioScatterData.others.map((x) => [\r\n    Number(x[1]),\r\n    Number(cutComma(x[2])),\r\n  ]);\r\n\r\n  const meData = [\r\n    Number(formatRatioScatterData.me[1]),\r\n    Number(cutComma(formatRatioScatterData.me[2])),\r\n  ];\r\n\r\n  const option = {\r\n    title: {\r\n      text: '學生數與師生比分佈圖(108年)',\r\n      textStyle: {\r\n        fontSize: 16,\r\n        lineHeight: 35,\r\n        fontFamily: 'monospace',\r\n      },\r\n      subtext: '資料來源: 政府資料開放平臺',\r\n      subtextStyle: {\r\n        width: '100px',\r\n        align: 'center',\r\n        fontSize: 5,\r\n        lineHeight: 27,\r\n      },\r\n      sublink: 'https://data.gov.tw/dataset/26219',\r\n      subtarget: 'blank',\r\n    },\r\n    grid: {\r\n      left: '0%',\r\n      right: '5%',\r\n      bottom: '18%',\r\n      containLabel: true,\r\n    },\r\n    xAxis: [\r\n      {\r\n        type: 'value',\r\n        scale: true,\r\n        axisLabel: {\r\n          formatter: '{value}%',\r\n        },\r\n      },\r\n    ],\r\n    yAxis: [\r\n      {\r\n        type: 'value',\r\n        scale: true,\r\n        axisLabel: {\r\n          formatter: '{value} 人',\r\n        },\r\n      },\r\n    ],\r\n    tooltip: {\r\n      position: 'top',\r\n      formatter: function (params: any) {\r\n        console.log('params', params);\r\n        const { value, seriesName, dataIndex } = params;\r\n        const { me, others } = formatRatioScatterData;\r\n        const name =\r\n          seriesName === '平均值'\r\n            ? '<span>台灣大專學院 平均值</span>'\r\n            : seriesName === '我'\r\n            ? me[0]\r\n            : others[dataIndex][0];\r\n        return (\r\n          \"<div style='display:flex; flex-direction:column; justify-content:center; align-items:center;'>\" +\r\n          \"<div style='text-align:center; margin-bottom:10px;word-break:break-word;'><b>\" +\r\n          name +\r\n          \"</b></div><div style='text-align:left;'>\" +\r\n          '師生比： <b>' +\r\n          value[0] +\r\n          '</b> %' +\r\n          '<br/>' +\r\n          '學生數： <b>' +\r\n          value[1] +\r\n          '</b>人' +\r\n          '</div></div>'\r\n        );\r\n      },\r\n    },\r\n    legend: {\r\n      data: [\r\n        '我',\r\n        {\r\n          name: '平均值',\r\n          icon: 'circle',\r\n        },\r\n        '其他大學',\r\n      ],\r\n      right: 0,\r\n      top: 35,\r\n      textStyle: {\r\n        fontSize: 10,\r\n      },\r\n    },\r\n    series: [\r\n      {\r\n        name: '其他大學',\r\n        z: 1,\r\n        symbolSize: 5,\r\n        data: othersData,\r\n        type: 'scatter',\r\n        itemStyle: {\r\n          color: '#bdc3c7',\r\n        },\r\n      },\r\n      {\r\n        name: '平均值',\r\n        z: 2,\r\n        symbol: 'pin',\r\n        symbolSize: 17,\r\n        data: [avgData],\r\n        type: 'scatter',\r\n        itemStyle: {\r\n          color: '#7158e2',\r\n        },\r\n      },\r\n      {\r\n        name: '我',\r\n        z: 3,\r\n        symbolSize: 25,\r\n        symbol: `image://${meSymbolUrl}`,\r\n        data: [meData],\r\n        type: 'scatter',\r\n        itemStyle: {\r\n          color: '#e67e22',\r\n        },\r\n      },\r\n    ],\r\n  };\r\n  return (\r\n    <div\r\n      style={{\r\n        width: '100%',\r\n        height: '100%',\r\n        display: 'flex',\r\n        flexDirection: 'column',\r\n        justifyContent: 'center',\r\n        alignItems: 'center',\r\n      }}\r\n    >\r\n      <ReactECharts\r\n        option={option}\r\n        style={{\r\n          width: '100%',\r\n          height: '100%',\r\n          paddingTop: '5%',\r\n        }}\r\n      />\r\n    </div>\r\n  );\r\n};\r\n\r\nexport default RatioScatter;\r\n","import React from 'react';\r\nimport useWindowSize from '../../hooks/useWindowSize';\r\nimport { Col, Badge } from 'react-bootstrap';\r\n\r\nimport RatioScatter from '../../components/RatioScatter';\r\n\r\ninterface Props {\r\n  allColleges: Array<string[]>;\r\n  lastCollegeData: Array<string[]>;\r\n  latestName: string;\r\n  studentsLatestYearsAvg: string;\r\n  teachersLatestYearsAvg: string;\r\n}\r\n\r\nconst LeftBottom = ({\r\n  allColleges,\r\n  lastCollegeData,\r\n  latestName,\r\n  studentsLatestYearsAvg,\r\n  teachersLatestYearsAvg\r\n}: Props) => {\r\n  const latestYear = lastCollegeData.map((x) => x[0])[0];\r\n  const latestRatio = lastCollegeData.map((x) => x[7])[0];\r\n  const latestStuCount = lastCollegeData.map((x) => x[5])[0];\r\n\r\n  // Return quota or rank of student-teacher ratio based on request.\r\n  const stuTchLatestRatio = (req: string) => {\r\n    let sortedArray: Array<string[]> = [\r\n      ...allColleges.filter((e) => e[0] === latestYear)\r\n    ];\r\n    sortedArray.map((e) => e.unshift(e[8]));\r\n    sortedArray.sort().reverse();\r\n    sortedArray.map((e) => e.shift());\r\n    if (req === 'quota') {\r\n      return sortedArray.length;\r\n    } else if (req === 'rank') {\r\n      return sortedArray.indexOf(lastCollegeData[0]) + 1;\r\n    }\r\n  };\r\n\r\n  const stuTch108RatioAvg = (\r\n    Number(studentsLatestYearsAvg) / Number(teachersLatestYearsAvg)\r\n  ).toFixed(2);\r\n\r\n  const formatRatioScatterData = {\r\n    avg: [stuTch108RatioAvg, studentsLatestYearsAvg],\r\n    me: [latestName, latestRatio, latestStuCount],\r\n    others: allColleges\r\n      .filter((e) => e[0] === '108')\r\n      .filter((i) => i[4] !== latestName)\r\n      .map((x) => [x[4], x[7], x[5]])\r\n  };\r\n\r\n  const size = useWindowSize();\r\n\r\n  const buttomPartRatioScatterColLg = (size.width as any) < 1100 ? 12 : 6;\r\n\r\n  return (\r\n    <>\r\n      <Col\r\n        style={{\r\n          position: 'relative'\r\n        }}\r\n      >\r\n        <div style={{ position: 'absolute', right: '10%', top: '10%' }}>\r\n          <h5>\r\n            <Badge pill variant=\"danger\">\r\n              {latestYear}年\r\n            </Badge>{' '}\r\n          </h5>\r\n        </div>\r\n        <div\r\n          style={{\r\n            position: 'absolute',\r\n            left: '15%',\r\n            top: '0%',\r\n            display: 'flex',\r\n            flexDirection: 'column',\r\n            alignItems: 'center'\r\n          }}\r\n        >\r\n          <div\r\n            style={{\r\n              border: '1px solid grey',\r\n              padding: '1px',\r\n              borderRadius: '50%'\r\n            }}\r\n          >\r\n            <div\r\n              style={{\r\n                display: 'flex',\r\n                justifyContent: 'center',\r\n                alignItems: 'center',\r\n                height: '55px',\r\n                width: '55px',\r\n                border: '1px solid black',\r\n                borderRadius: '50%',\r\n                fontSize: '20px'\r\n              }}\r\n            >\r\n              {stuTchLatestRatio('rank')}{' '}\r\n              <span style={{ fontSize: '13px' }}>名</span>\r\n            </div>\r\n          </div>\r\n          <div style={{ marginTop: '-3px' }}>\r\n            <span style={{ fontSize: '10px' }}>\r\n              共{stuTchLatestRatio('quota')}所學校\r\n            </span>\r\n          </div>\r\n        </div>\r\n        <div style={{ position: 'absolute', left: '22%', top: '38%' }}>\r\n          <h3>\r\n            生師比 &nbsp;&nbsp;\r\n            <span style={{ fontSize: '40px' }}>{latestRatio}</span> &nbsp; %\r\n          </h3>\r\n        </div>\r\n\r\n        <div style={{ position: 'absolute', left: '20%', top: '70%' }}>\r\n          <h6>\r\n            每校平均生師比 &nbsp;\r\n            <span style={{ fontSize: '20px' }}>{stuTch108RatioAvg}</span>\r\n            %&nbsp;<span style={{ fontSize: '13px' }}> (108年)</span>\r\n          </h6>\r\n        </div>\r\n      </Col>\r\n      <Col lg={buttomPartRatioScatterColLg}>\r\n        <RatioScatter formatRatioScatterData={formatRatioScatterData} />\r\n      </Col>\r\n    </>\r\n  );\r\n};\r\n\r\nexport default LeftBottom;\r\n","import React, { useEffect, useState } from 'react';\r\nimport ReactECharts from 'echarts-for-react';\r\n\r\ninterface Props {\r\n  formatPieChartData: Array<any[]>;\r\n}\r\n\r\nconst PieChart = ({ formatPieChartData }: Props) => {\r\n  console.log('pie formatPieChartData', formatPieChartData);\r\n\r\n  const eChartsRef = React.useRef(null as any);\r\n  const [option, setOption] = useState({});\r\n\r\n  const latestYear = formatPieChartData.map((e) => e[0])[0];\r\n  const defaultOption = {\r\n    legend: {},\r\n    tooltip: {\r\n      trigger: 'axis',\r\n      //   showContent: false\r\n    },\r\n    dataset: {\r\n      source: [\r\n        ['學年', ...formatPieChartData.map((e) => e[0] + ' 學年')],\r\n        ['學生', ...formatPieChartData.map((e) => e[1])],\r\n        ['老師', ...formatPieChartData.map((e) => e[2])],\r\n      ],\r\n    },\r\n    xAxis: { type: 'category' },\r\n    yAxis: { gridIndex: 0 },\r\n    grid: { top: '60%' },\r\n    series: [\r\n      {\r\n        type: 'line',\r\n        smooth: true,\r\n        seriesLayoutBy: 'row',\r\n        emphasis: { focus: 'series' },\r\n      },\r\n      {\r\n        type: 'line',\r\n        smooth: true,\r\n        seriesLayoutBy: 'row',\r\n        emphasis: { focus: 'series' },\r\n      },\r\n      {\r\n        name: '每校平均學生',\r\n        type: 'line',\r\n        data: formatPieChartData.map((e) => e[3].studentsAvg),\r\n        smooth: true,\r\n        seriesLayoutBy: 'row',\r\n        emphasis: { focus: 'series' },\r\n      },\r\n      {\r\n        name: '每校平均老師',\r\n        type: 'line',\r\n        data: formatPieChartData.map((e) => e[3].teachersAvg),\r\n        smooth: true,\r\n        seriesLayoutBy: 'row',\r\n        emphasis: { focus: 'series' },\r\n      },\r\n      {\r\n        type: 'pie',\r\n        id: 'pie',\r\n        radius: '35%',\r\n        center: ['50%', '32%'],\r\n        emphasis: { focus: 'data' },\r\n        label: {\r\n          formatter: `{b}: {@${latestYear + ' 學年'}} 人  ({d}%)`,\r\n        },\r\n        encode: {\r\n          itemName: '學年',\r\n          value: latestYear + ' 學年',\r\n          tooltip: latestYear + ' 學年',\r\n        },\r\n      },\r\n    ],\r\n  };\r\n\r\n  //   const [count, setCount] = useState(0);\r\n  function onChartReady(echarts: any) {\r\n    console.log('echarts is ready', echarts);\r\n  }\r\n  //   function onChartClick(param: any, echarts: any) {\r\n  //     console.log(param, echarts);\r\n  //     setCount(count + 1);\r\n  //   }\r\n  function onChartLegendselectchanged(param: any, echarts: any) {\r\n    console.log(param, echarts);\r\n  }\r\n\r\n  function onUpdateAxisPointer(event: any) {\r\n    if (event.axesInfo[0]) {\r\n      var dimensionValue = Number(event.axesInfo[0].value + 1);\r\n\r\n      const option2 = {\r\n        series: {\r\n          id: 'pie',\r\n          label: {\r\n            formatter: '{b}: {@[' + dimensionValue + ']} 人 ({d}%)',\r\n          },\r\n          encode: {\r\n            value: dimensionValue,\r\n            tooltip: dimensionValue,\r\n          },\r\n        },\r\n      };\r\n\r\n      if (eChartsRef && eChartsRef.current) {\r\n        eChartsRef.current?.getEchartsInstance().setOption(option2);\r\n      }\r\n    }\r\n  }\r\n\r\n  useEffect(() => {\r\n    setOption(defaultOption);\r\n  }, [setOption, defaultOption]);\r\n\r\n  return (\r\n    <>\r\n      <ReactECharts\r\n        ref={eChartsRef}\r\n        option={option}\r\n        style={{ width: '80%', height: '90%', paddingTop: '5%' }}\r\n        onChartReady={onChartReady}\r\n        onEvents={{\r\n          //   click: onChartClick,\r\n          legendselectchanged: onChartLegendselectchanged,\r\n          updateAxisPointer: onUpdateAxisPointer,\r\n        }}\r\n      />\r\n      ),\r\n      {/* <div>Click Count: {count}</div> */}\r\n    </>\r\n  );\r\n};\r\n\r\nexport default PieChart;\r\n","import React from 'react';\r\nimport PieChart from '../../components/PieChart';\r\n\r\ninterface Props {\r\n  collegeData: Array<string[]>;\r\n  studentsAllYearsAvg: Array<string>;\r\n  teachersAllYearsAvg: Array<string>;\r\n}\r\n\r\nconst Right = ({\r\n  collegeData,\r\n  studentsAllYearsAvg,\r\n  teachersAllYearsAvg\r\n}: Props) => {\r\n  const formatPieChartData = collegeData.map((yearCollegeData) => {\r\n    const index: number =\r\n      yearCollegeData[0] === '108'\r\n        ? 0\r\n        : yearCollegeData[0] === '107'\r\n        ? 1\r\n        : yearCollegeData[0] === '106'\r\n        ? 2\r\n        : -1;\r\n    return [\r\n      yearCollegeData[0],\r\n      Number(yearCollegeData[5].replace(',', '')),\r\n      Number(yearCollegeData[6]),\r\n      {\r\n        studentsAvg: Number(studentsAllYearsAvg[index]),\r\n        teachersAvg: Number(teachersAllYearsAvg[index])\r\n      }\r\n    ];\r\n  }) as any;\r\n\r\n  return (\r\n    <>\r\n      <PieChart formatPieChartData={formatPieChartData} />\r\n    </>\r\n  );\r\n};\r\n\r\nexport default Right;\r\n","import useWindowSize from '../hooks/useWindowSize';\r\nimport { Col, Row, Container } from 'react-bootstrap';\r\nimport { Link } from 'react-router-dom';\r\nimport BackArrowIcon from '../assets/images/back-arrow.svg';\r\n\r\nimport LeftTop from '../layout/CollegeDetail/LeftTop';\r\nimport LeftMid from '../layout/CollegeDetail/LeftMid';\r\nimport LeftBottom from '../layout/CollegeDetail/LeftBottom';\r\nimport Right from '../layout/CollegeDetail/Right';\r\n\r\ninterface Props {\r\n  allColleges: Array<string[]>;\r\n  match: {\r\n    params: {\r\n      id: string;\r\n    };\r\n  };\r\n}\r\n\r\nconst CollegeDetail = ({ match: { params }, allColleges }: Props) => {\r\n  const { id } = params;\r\n\r\n  const collegeData = allColleges.filter((e) => e[3] === id);\r\n  const lastCollegeData = collegeData.slice(-1);\r\n  const latestName = lastCollegeData.map((x) => x[4])[0];\r\n\r\n  // Calculate average all of students or teacher (country) base on year.\r\n  const clacAvg = (year: string, stuOrTch: string) => {\r\n    let indexOfData: number;\r\n    if (stuOrTch === 'stu') {\r\n      indexOfData = 5;\r\n    } else if (stuOrTch === 'tch') {\r\n      indexOfData = 6;\r\n    }\r\n    const whichYearData = allColleges.filter((e) => e[0] === year);\r\n    const CountArray = whichYearData.map((x) =>\r\n      Number(x[indexOfData].replace(',', ''))\r\n    );\r\n    const Avg = (\r\n      [0, ...CountArray].reduce((acc, cur) => acc + cur) / whichYearData.length\r\n    ).toFixed(1);\r\n\r\n    return Avg;\r\n  };\r\n\r\n  const studentsAllYearsAvg: Array<string> = [\r\n    clacAvg('108', 'stu'),\r\n    clacAvg('107', 'stu'),\r\n    clacAvg('106', 'stu'),\r\n  ];\r\n  const teachersAllYearsAvg: Array<string> = [\r\n    clacAvg('108', 'tch'),\r\n    clacAvg('107', 'tch'),\r\n    clacAvg('106', 'tch'),\r\n  ];\r\n\r\n  const size = useWindowSize();\r\n  const bottomPartFlexDirection = (size.width as any) < 1100 ? 'column' : 'row';\r\n\r\n  return (\r\n    <>\r\n      <Container\r\n        style={{\r\n          maxWidth: '100%',\r\n          height: '100vh',\r\n        }}\r\n      >\r\n        <Row>\r\n          <Col\r\n            style={{\r\n              height: '100vh',\r\n              padding: '0',\r\n              display: 'flex',\r\n              justifyContent: 'center',\r\n              alignItems: 'center',\r\n              borderRight: '1px solid black',\r\n            }}\r\n          >\r\n            <Link to=\"/\">\r\n              <img\r\n                src={BackArrowIcon}\r\n                alt=\"back-icon\"\r\n                style={{\r\n                  position: 'absolute',\r\n                  top: '20px',\r\n                  left: '20px',\r\n                  zIndex: 2,\r\n                }}\r\n              />\r\n            </Link>\r\n            <Container\r\n              style={{\r\n                display: 'grid',\r\n                flexDirection: 'column',\r\n                gridTemplateRows: '.8fr .6fr 1fr',\r\n                height: '100%',\r\n              }}\r\n            >\r\n              <Row>\r\n                <LeftTop />\r\n              </Row>\r\n              <Row\r\n                style={{\r\n                  justifyContent: 'center',\r\n                  alignItems: 'center',\r\n                  position: 'relative',\r\n                }}\r\n              >\r\n                <LeftMid\r\n                  lastCollegeData={lastCollegeData}\r\n                  latestName={latestName}\r\n                />\r\n              </Row>\r\n              <Row\r\n                style={{\r\n                  flexDirection: bottomPartFlexDirection,\r\n                }}\r\n              >\r\n                <LeftBottom\r\n                  allColleges={allColleges}\r\n                  lastCollegeData={lastCollegeData}\r\n                  latestName={latestName}\r\n                  studentsLatestYearsAvg={studentsAllYearsAvg[0]}\r\n                  teachersLatestYearsAvg={teachersAllYearsAvg[0]}\r\n                />\r\n              </Row>\r\n            </Container>\r\n          </Col>\r\n          <Col\r\n            style={{\r\n              height: '100vh',\r\n              display: 'flex',\r\n              justifyContent: 'center',\r\n              alignItems: 'center',\r\n            }}\r\n          >\r\n            <Right\r\n              collegeData={collegeData}\r\n              studentsAllYearsAvg={studentsAllYearsAvg}\r\n              teachersAllYearsAvg={teachersAllYearsAvg}\r\n            />\r\n          </Col>\r\n        </Row>\r\n      </Container>\r\n    </>\r\n  );\r\n};\r\n\r\nexport default CollegeDetail;\r\n","import { useState, useEffect } from 'react';\r\n\r\nimport { Switch, BrowserRouter as Router, Route } from 'react-router-dom';\r\nimport './App.css';\r\nimport 'bootstrap/dist/css/bootstrap.min.css';\r\n\r\nimport Home from './pages/Home';\r\nimport CollegeDetail from './pages/CollegeDetail';\r\n\r\nfunction App() {\r\n  const [allColleges, setAllColeges] = useState([]);\r\n\r\n  useEffect(() => {\r\n    const getAllColleges = async () => {\r\n      const range = `A:I`;\r\n      const res = await fetch(\r\n        `${process.env.REACT_APP_GOOGLE_SHEET_API_BASE}/${process.env.REACT_APP_GOOGLE_SHEET_ID}/values/${range}?key=${process.env.REACT_APP_GOOGLE_API_KEY}`\r\n      );\r\n      const { values } = await res.json();\r\n      setAllColeges(values);\r\n    };\r\n\r\n    getAllColleges();\r\n  }, [setAllColeges]);\r\n\r\n  return (\r\n    <div className=\"App\">\r\n      <Router>\r\n        <Switch>\r\n          <Route\r\n            exact\r\n            path=\"/\"\r\n            component={(props: any) => <Home {...{ ...props, allColleges }} />}\r\n          />\r\n          <Route\r\n            path=\"/detail/:id\"\r\n            component={(props: any) => (\r\n              <CollegeDetail {...{ ...props, allColleges }} />\r\n            )}\r\n          />\r\n        </Switch>\r\n      </Router>\r\n    </div>\r\n  );\r\n}\r\n\r\nexport default App;\r\n","import { ReportHandler } from 'web-vitals';\r\n\r\nconst reportWebVitals = (onPerfEntry?: ReportHandler) => {\r\n  if (onPerfEntry && onPerfEntry instanceof Function) {\r\n    import('web-vitals').then(({ getCLS, getFID, getFCP, getLCP, getTTFB }) => {\r\n      getCLS(onPerfEntry);\r\n      getFID(onPerfEntry);\r\n      getFCP(onPerfEntry);\r\n      getLCP(onPerfEntry);\r\n      getTTFB(onPerfEntry);\r\n    });\r\n  }\r\n};\r\n\r\nexport default reportWebVitals;\r\n","import React from 'react';\r\nimport ReactDOM from 'react-dom';\r\nimport App from './App';\r\nimport reportWebVitals from './reportWebVitals';\r\n\r\nReactDOM.render(\r\n  <React.StrictMode>\r\n    <App />\r\n  </React.StrictMode>,\r\n  document.getElementById('root')\r\n);\r\n\r\n// If you want to start measuring performance in your app, pass a function\r\n// to log results (for example: reportWebVitals(console.log))\r\n// or send to an analytics endpoint. Learn more: https://bit.ly/CRA-vitals\r\nreportWebVitals();\r\n"],"sourceRoot":""}