{"version":3,"sources":["hooks/useWindowSize.tsx","assets/images/cleaning-white.svg","assets/images/logo.svg","layout/Header.tsx","assets/images/collegeType-1.svg","assets/images/collegeType-2.svg","assets/images/collegeType-3.svg","assets/images/medal-1.svg","assets/images/medal-2.svg","assets/images/medal-3.svg","components/College.tsx","components/AllColleges.tsx","assets/images/top-arrow.svg","pages/Home.tsx","assets/images/back-arrow.svg","layout/CollegeDetail/LeftTop.tsx","components/PercentGauge.tsx","layout/CollegeDetail/LeftMid.tsx","components/RatioScatter.tsx","layout/CollegeDetail/LeftBottom.tsx","components/PieChart.tsx","layout/CollegeDetail/Right.tsx","pages/CollegeDetail.tsx","App.tsx","reportWebVitals.ts","index.tsx"],"names":["useWindowSize","useState","width","undefined","height","windowSize","setWindowSize","useEffect","handleResize","window","innerWidth","innerHeight","addEventListener","removeEventListener","Header","changeSchoolYear","changeSchoolType","changeIsPublic","changeSortPercent","schoolYear","schoolType","isPublic","sortPercent","changeOnSearchFieldValue","afterFileterLength","cleanSelectState","searchFieldValue","setSearchFieldValue","screen","Navbar","expand","bg","variant","fixed","style","borderBottom","Brand","href","Row","marginLeft","Col","xs","display","justifyContent","alignItems","src","logoIcon","alt","fontSize","Toggle","aria-controls","Collapse","id","Nav","className","NavDropdown","title","Item","onClick","Divider","border","borderRadius","color","cleanIcon","cursor","Form","inline","margin","xl","md","FormControl","type","placeholder","onChange","e","target","value","onKeyDown","key","Button","College","data","rank","Card","borderColor","medal1","medal2","medal3","position","left","top","Img","collegeType1Image","collegeType2Image","collegeType3Image","maxHeight","Body","Title","Text","Badge","pill","ProgressBar","marginTop","marginBottom","now","Number","backgroundColor","label","to","AllColleges","allColleges","onSearchFieldValue","changeAfterFileterLength","displayColleges","setDisplayColleges","sortAllColleges","array","sortedArray","map","unshift","sort","shift","reverse","filter","includes","Container","fluid","paddingTop","lg","sm","college","idx","length","indexOf","Home","setSchoolYear","setIsPublic","setSchoolType","setSortPercent","setOnSearchFieldValue","setAfterFileterLength","x","topIcon","testingTopBgImage","LeftTop","schoolImage","padding","maxWidth","zIndex","backgroundSize","backgroundImage","backgroundRepeat","backgroundPosition","PercentGauge","latestPercentage","option","series","progress","show","itemStyle","shadowBlur","shadowOffsetX","shadowOffsetY","axisLine","lineStyle","axisTick","splitLine","axisLabel","distance","detail","valueAnimation","offsetCenter","formatter","flexDirection","LeftMid","lastCollegeData","latestName","latestPublicType","latestSchoolType","meSymbolUrl","location","origin","RatioScatter","formatRatioScatterData","avgData","avg","cutComma","replace","othersData","others","meData","me","text","textStyle","lineHeight","fontFamily","subtext","subtextStyle","align","sublink","subtarget","grid","right","bottom","containLabel","xAxis","scale","yAxis","tooltip","params","console","log","seriesName","dataIndex","legend","name","icon","z","symbolSize","symbol","LeftBottom","studentsLatestYearsAvg","teachersLatestYearsAvg","latestYear","latestRatio","latestStuCount","stuTchLatestRatio","req","stuTch108RatioAvg","toFixed","i","buttomPartRatioScatterColLg","PieChart","formatPieChartData","eChartsRef","React","useRef","setOption","defaultOption","trigger","dataset","source","gridIndex","smooth","seriesLayoutBy","emphasis","focus","studentsAvg","teachersAvg","radius","center","encode","itemName","ref","onChartReady","echarts","onEvents","legendselectchanged","param","updateAxisPointer","event","axesInfo","dimensionValue","option2","current","getEchartsInstance","Right","collegeData","studentsAllYearsAvg","teachersAllYearsAvg","yearCollegeData","index","CollegeDetail","match","slice","clacAvg","year","stuOrTch","indexOfData","whichYearData","CountArray","reduce","acc","cur","bottomPartFlexDirection","borderRight","BackArrowIcon","gridTemplateRows","App","setAllColeges","getAllColleges","a","fetch","process","res","json","values","exact","path","component","props","reportWebVitals","onPerfEntry","Function","then","getCLS","getFID","getFCP","getLCP","getTTFB","ReactDOM","render","StrictMode","document","getElementById"],"mappings":"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","file":"static/js/main.305dabea.chunk.js","sourcesContent":["import { useState, useEffect } from 'react';\n\n// Define general type for useWindowSize hook, which includes width and height\ninterface Size {\n  width: number | undefined;\n  height: number | undefined;\n}\n\nexport default function useWindowSize(): Size {\n  // Initialize state with undefined width/height so server and client renders match\n  // Learn more here: https://joshwcomeau.com/react/the-perils-of-rehydration/\n  const [windowSize, setWindowSize] = useState<Size>({\n    width: undefined,\n    height: undefined\n  });\n  useEffect(() => {\n    // Handler to call on window resize\n    function handleResize() {\n      // Set window width/height to state\n      setWindowSize({\n        width: window.innerWidth,\n        height: window.innerHeight\n      });\n    }\n    // Add event listener\n    window.addEventListener('resize', handleResize);\n    // Call handler right away so state gets updated with initial window size\n    handleResize();\n    // Remove event listener on cleanup\n    return () => window.removeEventListener('resize', handleResize);\n  }, []); // Empty array ensures that effect is only run on mount\n  return windowSize;\n}\n","export default __webpack_public_path__ + \"static/media/cleaning-white.0319dc07.svg\";","export default __webpack_public_path__ + \"static/media/logo.bca62d69.svg\";","import React, { useEffect, useState } from 'react';\nimport useWindowSize from '../hooks/useWindowSize';\nimport {\n  Button,\n  Form,\n  FormControl,\n  Nav,\n  Navbar,\n  NavDropdown,\n  Col,\n  Row\n} from 'react-bootstrap';\n\nimport cleanIcon from '../assets/images/cleaning-white.svg';\nimport logoIcon from '../assets/images/logo.svg';\n\ninterface Props {\n  changeSchoolYear: Function;\n  changeSchoolType: Function;\n  changeIsPublic: Function;\n  changeSortPercent: Function;\n  changeOnSearchFieldValue: Function;\n  schoolYear: string;\n  schoolType: string;\n  isPublic: string;\n  sortPercent: string;\n  afterFileterLength: Number;\n  cleanSelectState: Function;\n}\n\nconst Header = ({\n  changeSchoolYear,\n  changeSchoolType,\n  changeIsPublic,\n  changeSortPercent,\n  schoolYear,\n  schoolType,\n  isPublic,\n  sortPercent,\n  changeOnSearchFieldValue,\n  afterFileterLength,\n  cleanSelectState\n}: Props) => {\n  const [searchFieldValue, setSearchFieldValue] = useState('');\n\n  const screen = useWindowSize();\n\n  return (\n    <>\n      <Navbar\n        expand=\"lg\"\n        bg=\"dark\"\n        variant=\"dark\"\n        fixed=\"top\"\n        // sticky=\"top\"\n        style={{\n          borderBottom: '3px solid white'\n        }}\n      >\n        <Navbar.Brand href=\"/\">\n          <Row\n            style={\n              (screen.width as any) > 350\n                ? { width: '250px' }\n                : { width: '200px', marginLeft: '1px' }\n            }\n          >\n            <Col\n              xs={0}\n              style={{\n                display: 'flex',\n                justifyContent: 'center',\n                alignItems: 'center'\n              }}\n            >\n              {(screen.width as any) > 350 ? (\n                <img src={logoIcon} alt=\"logo\" style={{ height: '40px' }} />\n              ) : (\n                ''\n              )}\n              台灣大專校院{' '}\n              <b style={{ marginLeft: '5px', fontSize: '20px' }}>生師比</b>{' '}\n            </Col>\n          </Row>\n        </Navbar.Brand>\n        <Navbar.Toggle aria-controls=\"basic-navbar-nav\" />\n        <Navbar.Collapse id=\"basic-navbar-nav\">\n          <Nav className=\"mr-auto\">\n            <Col>\n              <NavDropdown title={schoolYear + ' 學年'} id=\"basic-nav-dropdown\">\n                <NavDropdown.Item\n                  onClick={() => changeSchoolYear('108')}\n                  href=\"#action/3.4\"\n                >\n                  108\n                </NavDropdown.Item>\n                <NavDropdown.Item\n                  onClick={() => changeSchoolYear('107')}\n                  href=\"#action/3.3\"\n                >\n                  107\n                </NavDropdown.Item>\n                <NavDropdown.Item\n                  onClick={() => changeSchoolYear('106')}\n                  href=\"#action/3.2\"\n                >\n                  106\n                </NavDropdown.Item>\n              </NavDropdown>\n            </Col>\n            <Col>\n              <NavDropdown\n                title={isPublic === 'all' ? '公私立' : isPublic}\n                id=\"basic-nav-dropdown\"\n              >\n                <NavDropdown.Item\n                  href=\"#action/3.1\"\n                  onClick={() => changeIsPublic('all')}\n                >\n                  全部\n                </NavDropdown.Item>\n                <NavDropdown.Divider />\n                <NavDropdown.Item\n                  onClick={() => changeIsPublic('公立')}\n                  href=\"#action/3.2\"\n                >\n                  公立\n                </NavDropdown.Item>\n                <NavDropdown.Item\n                  onClick={() => changeIsPublic('私立')}\n                  href=\"#action/3.3\"\n                >\n                  私立\n                </NavDropdown.Item>\n              </NavDropdown>\n            </Col>\n            <Col>\n              <NavDropdown\n                title={schoolType === 'all' ? '全部學校類別' : schoolType}\n                id=\"basic-nav-dropdown\"\n              >\n                <NavDropdown.Item\n                  href=\"#action/3.1\"\n                  onClick={() => changeSchoolType('all')}\n                >\n                  全部\n                </NavDropdown.Item>\n                <NavDropdown.Divider />\n                <NavDropdown.Item\n                  onClick={() => changeSchoolType('一般大學')}\n                  href=\"#action/3.2\"\n                >\n                  一般大學\n                </NavDropdown.Item>\n                <NavDropdown.Item\n                  onClick={() => changeSchoolType('技專校院')}\n                  href=\"#action/3.3\"\n                >\n                  技專校院\n                </NavDropdown.Item>\n                <NavDropdown.Item\n                  onClick={() => changeSchoolType('宗教研修學院')}\n                  href=\"#action/3.4\"\n                >\n                  宗教研修學院\n                </NavDropdown.Item>\n              </NavDropdown>\n            </Col>\n            <Col>\n              <NavDropdown\n                style={{\n                  border: '1px solid #57606f',\n                  borderRadius: '10px'\n                }}\n                title={\n                  sortPercent === 'no'\n                    ? '未排序'\n                    : sortPercent === 'inc'\n                    ? '遞增'\n                    : '遞減'\n                }\n                id=\"basic-nav-dropdown\"\n              >\n                <NavDropdown.Item\n                  href=\"#action/3.1\"\n                  onClick={() => changeSortPercent('no')}\n                >\n                  未排序\n                </NavDropdown.Item>\n                <NavDropdown.Divider />\n                <NavDropdown.Item\n                  onClick={() => changeSortPercent('dec')}\n                  href=\"#action/3.3\"\n                >\n                  遞減\n                </NavDropdown.Item>\n                <NavDropdown.Item\n                  onClick={() => changeSortPercent('inc')}\n                  href=\"#action/3.2\"\n                >\n                  遞增\n                </NavDropdown.Item>\n              </NavDropdown>\n            </Col>\n            <Col\n              style={{\n                display: 'flex',\n                justifyContent: 'center',\n                alignItems: 'center'\n              }}\n            >\n              <div\n                style={{\n                  fontSize: '15px',\n                  color: 'white',\n                  width: '100px'\n                }}\n              >\n                剩{' '}\n                <span\n                  style={{\n                    fontSize: '20px'\n                  }}\n                >\n                  {afterFileterLength}\n                </span>{' '}\n                間\n              </div>\n            </Col>\n            <Col\n              style={{\n                display: 'flex',\n                justifyContent: 'center',\n                alignItems: 'center'\n              }}\n            >\n              <img\n                src={cleanIcon}\n                alt=\"cleanIcon\"\n                style={{ height: '20px', cursor: 'pointer' }}\n                onClick={() => cleanSelectState()}\n              />\n            </Col>\n          </Nav>\n          <Form inline>\n            <Row style={{ margin: '5px auto' }}>\n              <Col\n                xl={8}\n                md={12}\n                style={{ display: 'flex', alignItems: 'center' }}\n              >\n                <FormControl\n                  style={{ width: '100%', margin: '5px 0' }}\n                  // className=\"mr-sm-1\"\n                  type=\"text\"\n                  placeholder=\"學校名稱...\"\n                  onChange={(e) => {\n                    if (e.target.value === '') {\n                      changeOnSearchFieldValue(e.target.value);\n                    }\n                    setSearchFieldValue(e.target.value);\n                  }}\n                  value={searchFieldValue}\n                  onKeyDown={(e: any) => {\n                    if (e.key === 'Enter') {\n                      changeOnSearchFieldValue(searchFieldValue);\n                    }\n                  }}\n                />\n              </Col>\n              <Col xl={4} md={0}>\n                {(screen.width as any) >= 1200 ||\n                (screen.width as any) < 992 ? (\n                  <Button\n                    variant=\"outline-light\"\n                    onClick={() => changeOnSearchFieldValue(searchFieldValue)}\n                    style={{ margin: '5px 0' }}\n                  >\n                    搜尋\n                  </Button>\n                ) : (\n                  ''\n                )}\n              </Col>\n            </Row>\n          </Form>\n        </Navbar.Collapse>\n      </Navbar>\n    </>\n  );\n};\n\nexport default Header;\n","export default __webpack_public_path__ + \"static/media/collegeType-1.42efa094.svg\";","export default __webpack_public_path__ + \"static/media/collegeType-2.5f45bc1e.svg\";","export default __webpack_public_path__ + \"static/media/collegeType-3.4e1228f2.svg\";","export default __webpack_public_path__ + \"static/media/medal-1.e4575def.svg\";","export default __webpack_public_path__ + \"static/media/medal-2.a115f5fc.svg\";","export default __webpack_public_path__ + \"static/media/medal-3.66799ff8.svg\";","import React from 'react';\nimport { Link } from 'react-router-dom';\nimport { Card, Button, Badge, ProgressBar } from 'react-bootstrap';\n\nimport collegeType1Image from '../assets/images/collegeType-1.svg';\nimport collegeType2Image from '../assets/images/collegeType-2.svg';\nimport collegeType3Image from '../assets/images/collegeType-3.svg';\nimport medal1 from '../assets/images/medal-1.svg';\nimport medal2 from '../assets/images/medal-2.svg';\nimport medal3 from '../assets/images/medal-3.svg';\n\ninterface Props {\n  data: Array<string>;\n  rank: number;\n}\n\nconst College = ({ data, rank }: Props) => {\n  return (\n    <>\n      <Card style={{ borderColor: 'black' }}>\n        <div\n          style={{\n            height: '150px',\n            display: 'flex',\n            justifyContent: 'center',\n            alignItems: 'center'\n          }}\n        >\n          <div>\n            {rank ? (\n              rank <= 3 ? (\n                <img\n                  src={rank === 1 ? medal1 : rank === 2 ? medal2 : medal3}\n                  alt={rank === 1 ? 'first' : rank === 2 ? 'second' : 'third'}\n                  style={{\n                    position: 'absolute',\n                    height: '60px',\n                    left: '5px',\n                    top: '8px'\n                  }}\n                />\n              ) : (\n                <span\n                  style={{\n                    position: 'absolute',\n                    display: 'flex',\n                    justifyContent: 'center',\n                    alignItems: 'center',\n                    height: '40px',\n                    width: '40px',\n                    left: '10px',\n                    top: '10px',\n                    fontSize: '18px',\n                    border: '1px black solid',\n                    borderRadius: '50%'\n                  }}\n                >\n                  {rank}\n                </span>\n              )\n            ) : (\n              ''\n            )}\n          </div>\n          <Card.Img\n            variant=\"top\"\n            src={\n              data[2] === '一般大學'\n                ? collegeType1Image\n                : data[2] === '技專校院'\n                ? collegeType2Image\n                : collegeType3Image\n            }\n            style={{ maxHeight: '100px', width: 'auto' }}\n          ></Card.Img>\n        </div>\n        <Card.Body>\n          <Card.Title>{data[4]}</Card.Title>\n          <Card.Text>\n            <Badge pill variant=\"danger\">\n              {data[0]}\n            </Badge>{' '}\n            {data[2] === '一般大學' ? (\n              <Badge variant=\"primary\">一般大學</Badge>\n            ) : data[2] === '技專校院' ? (\n              <Badge variant=\"secondary\">技專校院</Badge>\n            ) : (\n              <Badge variant=\"danger\">宗教研修學院</Badge>\n            )}{' '}\n            {data[1] === '公立' ? (\n              <Badge variant=\"success\">公立</Badge>\n            ) : (\n              <Badge variant=\"info\">私立</Badge>\n            )}\n            <br />\n            <ProgressBar\n              style={{\n                marginTop: '12px',\n                marginBottom: '10px',\n                height: '12px'\n              }}\n            >\n              <ProgressBar\n                now={Number(data[8])}\n                key={1}\n                style={{\n                  backgroundColor: '#e67e22',\n                  fontSize: '10px'\n                }}\n                label={'學生'}\n              />\n              <ProgressBar\n                now={100 - Number(data[8])}\n                key={2}\n                style={{ backgroundColor: '#bdc3c7' }}\n              />\n            </ProgressBar>\n            <p style={{ fontSize: '20px' }}>\n              {Number(data[8])} <span style={{ fontSize: '12px' }}> %</span>\n            </p>\n          </Card.Text>\n          <Link to={`detail/${data[3]}`}>\n            <Button\n              variant=\"warning\"\n              style={{\n                backgroundColor: '#f7b731',\n                border: '1px solid grey'\n              }}\n            >\n              生師比\n            </Button>\n          </Link>\n        </Card.Body>\n      </Card>\n    </>\n  );\n};\n\nexport default College;\n","import React, { useState, useEffect } from 'react';\nimport { Row, Col, Container } from 'react-bootstrap';\nimport College from './College';\n\ninterface Props {\n  allColleges: Array<string[]>;\n  schoolYear: string;\n  schoolType: string;\n  isPublic: string;\n  sortPercent: string;\n  onSearchFieldValue: string;\n  changeAfterFileterLength: Function;\n}\n\nconst AllColleges = ({\n  allColleges,\n  schoolYear,\n  schoolType,\n  isPublic,\n  sortPercent,\n  onSearchFieldValue,\n  changeAfterFileterLength\n}: Props) => {\n  const [displayColleges, setDisplayColleges] = useState(allColleges);\n\n  const filterAllColleges = () => {\n    if (isPublic === 'all' && schoolType === 'all') {\n      setDisplayColleges(\n        sortAllColleges(\n          allColleges\n            .filter((e) => e[0] === schoolYear)\n            .filter((e) => e[4].includes(onSearchFieldValue))\n        )\n      );\n    } else if (isPublic === 'all' && schoolType !== 'all') {\n      setDisplayColleges(\n        sortAllColleges(\n          allColleges\n            .filter((e) => e[0] === schoolYear)\n            .filter((e) => e[2] === schoolType)\n            .filter((e) => e[4].includes(onSearchFieldValue))\n        )\n      );\n    } else if (isPublic !== 'all' && schoolType === 'all') {\n      setDisplayColleges(\n        sortAllColleges(\n          allColleges\n            .filter((e) => e[0] === schoolYear)\n            .filter((e) => e[1] === isPublic)\n            .filter((e) => e[4].includes(onSearchFieldValue))\n        )\n      );\n    } else {\n      setDisplayColleges(\n        sortAllColleges(\n          allColleges\n            .filter((e) => e[0] === schoolYear)\n            .filter((e) => e[2] === schoolType)\n            .filter((e) => e[1] === isPublic)\n            .filter((e) => e[4].includes(onSearchFieldValue))\n        )\n      );\n    }\n  };\n\n  const sortAllColleges = (array: Array<string[]>) => {\n    let sortedArray: Array<string[]> = [...array];\n    changeAfterFileterLength(array);\n\n    if (sortPercent === 'inc') {\n      sortedArray.map((e) => e.unshift(e[8]));\n      sortedArray.sort();\n      sortedArray.map((e) => e.shift());\n\n      return sortedArray;\n    } else if (sortPercent === 'dec') {\n      sortedArray.map((e) => e.unshift(e[8]));\n      sortedArray.sort().reverse();\n      sortedArray.map((e) => e.shift());\n\n      return sortedArray;\n    } else {\n      return sortedArray.sort();\n    }\n  };\n\n  useEffect(() => {\n    filterAllColleges();\n  }, [\n    allColleges,\n    schoolYear,\n    isPublic,\n    schoolType,\n    sortPercent,\n    onSearchFieldValue\n  ]);\n\n  return (\n    <>\n      <Container\n        fluid={true}\n        style={{ paddingTop: '90px', backgroundColor: '#000' }}\n      >\n        <Row lg={5} md={3} sm={2} xs={1}>\n          {displayColleges.map((college, idx) => (\n            <Col key={idx} style={{ margin: '15px 0' }}>\n              <College\n                data={college}\n                rank={\n                  sortPercent === 'inc'\n                    ? displayColleges.length - displayColleges.indexOf(college)\n                    : sortPercent === 'dec'\n                    ? displayColleges.indexOf(college) + 1\n                    : 0\n                }\n              />\n            </Col>\n          ))}\n        </Row>\n      </Container>\n    </>\n  );\n};\n\nexport default AllColleges;\n","export default __webpack_public_path__ + \"static/media/top-arrow.db041c86.svg\";","import React, { useState, useEffect } from 'react';\n\nimport Header from '../layout/Header';\nimport AllColleges from '../components/AllColleges';\nimport topIcon from '../assets/images/top-arrow.svg';\n\ninterface Props {\n  allColleges: Array<string[]>;\n}\n\nconst Home = ({ allColleges }: Props) => {\n  const [schoolYear, setSchoolYear] = useState('108');\n  const [isPublic, setIsPublic] = useState('all');\n  const [schoolType, setSchoolType] = useState('all');\n  const [sortPercent, setSortPercent] = useState('no');\n  const [onSearchFieldValue, setOnSearchFieldValue] = useState('');\n  const [afterFileterLength, setAfterFileterLength] = useState(0);\n\n  const changeSchoolYear = (x: string) => {\n    setSchoolYear(x);\n  };\n  const changeSchoolType = (x: string) => {\n    setSchoolType(x);\n  };\n  const changeIsPublic = (x: string) => {\n    setIsPublic(x);\n  };\n  const changeSortPercent = (x: string) => {\n    setSortPercent(x);\n  };\n  const changeOnSearchFieldValue = (x: string) => {\n    setOnSearchFieldValue(x);\n  };\n\n  const changeAfterFileterLength = (x: Array<string[]>) => {\n    setAfterFileterLength(x.length);\n  };\n\n  const cleanSelectState = () => {\n    setSchoolYear('108');\n    setSchoolType('all');\n    setIsPublic('all');\n    setOnSearchFieldValue('');\n    // setSortPercent('no');\n  };\n\n  return (\n    <>\n      <Header\n        changeSchoolYear={changeSchoolYear}\n        schoolYear={schoolYear}\n        changeSchoolType={changeSchoolType}\n        schoolType={schoolType}\n        changeIsPublic={changeIsPublic}\n        isPublic={isPublic}\n        changeSortPercent={changeSortPercent}\n        sortPercent={sortPercent}\n        changeOnSearchFieldValue={changeOnSearchFieldValue}\n        afterFileterLength={afterFileterLength}\n        cleanSelectState={cleanSelectState}\n      />\n      <main>\n        <AllColleges\n          allColleges={allColleges}\n          schoolYear={schoolYear}\n          schoolType={schoolType}\n          isPublic={isPublic}\n          sortPercent={sortPercent}\n          onSearchFieldValue={onSearchFieldValue}\n          changeAfterFileterLength={changeAfterFileterLength}\n        />\n      </main>\n      <a href=\"#\">\n        <div className=\"home__backtotop\">\n          <img src={topIcon} alt=\"top-icon\" className=\"home__backtotop-icon\" />\n        </div>\n      </a>\n    </>\n  );\n};\n\nexport default Home;\n","export default __webpack_public_path__ + \"static/media/back-arrow.53678069.svg\";","import React, { useState, useEffect } from 'react';\nimport { Col } from 'react-bootstrap';\n\nimport Image1f from '../../assets/images/slideShow/1.jpg';\nconst testingSchoolImage =\n  'https://encrypted-tbn0.gstatic.com/images?q=tbn:ANd9GcTMPzc49UKbhDRVpqL332Dn3cXoGfrW6tOMs6rNqfvakx2LKUscxMdQPMc&s';\n\nconst testingTopBgImage = [\n  'https://images.unsplash.com/photo-1523050854058-8df90110c9f1?ixid=MnwxMjA3fDB8MHxwaG90by1wYWdlfHx8fGVufDB8fHx8&ixlib=rb-1.2.1&auto=format&fit=crop&w=1350&q=80',\n  'https://images.unsplash.com/photo-1535982330050-f1c2fb79ff78?ixlib=rb-1.2.1&ixid=MnwxMjA3fDB8MHxwaG90by1wYWdlfHx8fGVufDB8fHx8&auto=format&fit=crop&w=1267&q=80'\n];\n\nconst LeftTop = () => {\n  const [schoolImage, setSchoolImage] = useState(testingSchoolImage);\n  // Request custom google search api to search first image we found.\n  const searchImage = async (schoolName: string) => {\n    const res = await fetch(\n      `${process.env.REACT_APP_GOOGLE_CUSTOMSEARCH_API_BASE}/?key=${process.env.REACT_APP_GOOGLE_API_KEY}&cx=${process.env.REACT_APP_GOOGLE_CUSTOMSEARCH_ENGINE_ID}&searchType=image&q=${schoolName}`\n    );\n    const data = await res.json();\n\n    if (data.items == null) {\n      return;\n    }\n    const imageUrl = data.items[0].image.thumbnailLink;\n    setSchoolImage(imageUrl);\n  };\n\n  useEffect(() => {\n    // searchImage(latestName);\n    // console.log('schoolImage', schoolImage);\n  }, []);\n  return (\n    <>\n      <Col\n        lg={3}\n        md={3}\n        sm={12}\n        xs={12}\n        style={{\n          // backgroundColor: 'red',\n          padding: 0,\n          height: '100%',\n          display: 'flex',\n          justifyContent: 'center',\n          alignItems: 'flex-end'\n        }}\n      >\n        <div\n          style={{\n            height: '50%'\n          }}\n        >\n          <img\n            src={schoolImage}\n            alt=\"school-image\"\n            style={{\n              maxWidth: '100%',\n              height: 'auto',\n              maxHeight: '100%',\n              zIndex: 1\n            }}\n          />\n        </div>\n      </Col>\n      <Col\n        lg={9}\n        md={9}\n        sm={12}\n        xs={12}\n        style={{\n          padding: '0',\n          height: '100%',\n          backgroundSize: 'contain',\n          backgroundImage: `url(${testingTopBgImage[1]})`,\n          backgroundRepeat: 'no-repeat',\n          backgroundPosition: 'right'\n        }}\n      ></Col>\n    </>\n  );\n};\n\nexport default LeftTop;\n","import React from 'react';\nimport ReactECharts from 'echarts-for-react';\n\ninterface Props {\n  latestPercentage: string;\n}\n\nconst PercentGauge = ({ latestPercentage }: Props) => {\n  const option = {\n    series: [\n      {\n        type: 'gauge',\n        progress: {\n          show: true,\n          width: 13\n        },\n        itemStyle: {\n          color: '#e67e22',\n          // color: 'grey',\n          shadowBlur: 2,\n          shadowOffsetX: 1,\n          shadowOffsetY: 1\n        },\n        axisLine: {\n          lineStyle: {\n            width: 2\n          }\n        },\n        axisTick: {\n          show: false\n        },\n        splitLine: {\n          length: 3,\n          lineStyle: {\n            width: 1,\n            color: '#999'\n          }\n        },\n        axisLabel: {\n          distance: 5,\n          color: '#7f8c8d',\n          fontSize: 5\n        },\n        title: {\n          show: false\n        },\n        detail: {\n          valueAnimation: true,\n          fontSize: 20,\n          offsetCenter: [2, '110%'],\n          formatter: function (value: number) {\n            return value + '%';\n          }\n        },\n        data: [\n          {\n            value: Number(latestPercentage)\n          }\n        ]\n      }\n    ]\n  };\n\n  return (\n    <div\n      style={{\n        width: '100%',\n        height: '100%',\n        display: 'flex',\n        flexDirection: 'column',\n        justifyContent: 'center',\n        alignItems: 'center'\n      }}\n    >\n      <ReactECharts\n        option={option}\n        style={{\n          width: '90%',\n          height: '90%',\n          paddingTop: '10%'\n        }}\n      />\n      <span style={{ marginLeft: '-2%', fontSize: '12px' }}>學生佔比</span>\n    </div>\n  );\n};\n\nexport default PercentGauge;\n","import React from 'react';\nimport { Col, Badge } from 'react-bootstrap';\n\nimport PercentGauge from '../../components/PercentGauge';\n\ninterface Props {\n  lastCollegeData: Array<string[]>;\n  latestName: string;\n}\n\nconst LeftMid = ({ lastCollegeData, latestName }: Props) => {\n  const latestPublicType = lastCollegeData.map((x) => x[1])[0];\n  const latestSchoolType = lastCollegeData.map((x) => x[2])[0];\n  const latestPercentage = lastCollegeData.map((x) => x[8])[0];\n\n  return (\n    <>\n      <Col lg={3}>\n        <h4>\n          {latestSchoolType === '宗教研修學院' ? (\n            <Badge variant=\"danger\">宗教研修學院</Badge>\n          ) : latestSchoolType === '技專校院' ? (\n            <Badge variant=\"secondary\">技專校院</Badge>\n          ) : (\n            <Badge variant=\"primary\">一般大學</Badge>\n          )}{' '}\n        </h4>\n        <h4>\n          {latestPublicType === '私立' ? (\n            <Badge variant=\"info\">私立</Badge>\n          ) : (\n            <Badge variant=\"success\">公立</Badge>\n          )}\n        </h4>\n      </Col>\n      <Col lg={6}>\n        <h1>{latestName}</h1>\n      </Col>\n      <Col\n        lg={3}\n        style={{\n          height: '100%',\n          display: 'flex',\n          justifyContent: 'center',\n          alignItems: 'center'\n        }}\n      >\n        <PercentGauge latestPercentage={latestPercentage} />\n      </Col>\n    </>\n  );\n};\n\nexport default LeftMid;\n","import React from 'react';\nimport ReactECharts from 'echarts-for-react';\n\n// Display icon of This college on scatter (I am using logo url).\nconst meSymbolUrl = `${window.location.origin}/static/media/logo.bca62d69.svg`;\n\ninterface Props {\n  formatRatioScatterData: {\n    avg: Array<string>;\n    me: Array<string>;\n    others: Array<string[]>;\n  };\n}\n\nconst RatioScatter = ({ formatRatioScatterData }: Props) => {\n  const avgData = [\n    Number(formatRatioScatterData.avg[0]),\n    Number(formatRatioScatterData.avg[1])\n  ];\n  const cutComma = (x: string) => {\n    return (x + '').replace(',', '');\n  };\n\n  const othersData = formatRatioScatterData.others.map((x) => [\n    Number(x[1]),\n    Number(cutComma(x[2]))\n  ]);\n\n  const meData = [\n    Number(formatRatioScatterData.me[1]),\n    Number(cutComma(formatRatioScatterData.me[2]))\n  ];\n\n  const option = {\n    title: {\n      text: '學生數與師生比分佈圖(108年)',\n      textStyle: {\n        fontSize: 16,\n        lineHeight: 35,\n        fontFamily: 'monospace'\n      },\n      subtext: '資料來源: 政府資料開放平臺',\n      subtextStyle: {\n        width: '100px',\n        align: 'center',\n        fontSize: 5,\n        lineHeight: 27\n      },\n      sublink: 'https://data.gov.tw/dataset/26219',\n      subtarget: 'blank'\n    },\n    grid: {\n      left: '0%',\n      right: '5%',\n      bottom: '18%',\n      containLabel: true\n    },\n    xAxis: [\n      {\n        type: 'value',\n        scale: true,\n        axisLabel: {\n          formatter: '{value}%'\n        }\n      }\n    ],\n    yAxis: [\n      {\n        type: 'value',\n        scale: true,\n        axisLabel: {\n          formatter: '{value} 人'\n        }\n      }\n    ],\n    tooltip: {\n      position: 'top',\n      formatter: function (params: any) {\n        console.log('params', params);\n        const { value, seriesName, dataIndex } = params;\n        const { me, others } = formatRatioScatterData;\n        const name =\n          seriesName === '平均值'\n            ? '<span>台灣大專學院 平均值</span>'\n            : seriesName === '我'\n            ? me[0]\n            : others[dataIndex][0];\n        return (\n          \"<div style='display:flex; flex-direction:column; justify-content:center; align-items:center;'>\" +\n          \"<div style='text-align:center; margin-bottom:10px;word-break:break-word;'><b>\" +\n          name +\n          \"</b></div><div style='text-align:left;'>\" +\n          '師生比： <b>' +\n          value[0] +\n          '</b> %' +\n          '<br/>' +\n          '學生數： <b>' +\n          value[1] +\n          '</b>人' +\n          '</div></div>'\n        );\n      }\n    },\n    legend: {\n      data: [\n        '我',\n        {\n          name: '平均值',\n          icon: 'circle'\n        },\n        '其他大學'\n      ],\n      right: 0,\n      top: 35,\n      textStyle: {\n        fontSize: 10\n      }\n    },\n    series: [\n      {\n        name: '其他大學',\n        z: 1,\n        symbolSize: 5,\n        data: othersData,\n        type: 'scatter',\n        itemStyle: {\n          color: '#bdc3c7'\n        }\n      },\n      {\n        name: '平均值',\n        z: 2,\n        symbol: 'pin',\n        symbolSize: 17,\n        data: [avgData],\n        type: 'scatter',\n        itemStyle: {\n          color: '#7158e2'\n        }\n      },\n      {\n        name: '我',\n        z: 3,\n        symbolSize: 25,\n        symbol: `image://${meSymbolUrl}`,\n        data: [meData],\n        type: 'scatter',\n        itemStyle: {\n          color: '#e67e22'\n        }\n      }\n    ]\n  };\n  return (\n    <div\n      style={{\n        width: '100%',\n        height: '100%',\n        display: 'flex',\n        flexDirection: 'column',\n        justifyContent: 'center',\n        alignItems: 'center'\n      }}\n    >\n      <ReactECharts\n        option={option}\n        style={{\n          width: '100%',\n          height: '100%',\n          paddingTop: '5%'\n        }}\n      />\n    </div>\n  );\n};\n\nexport default RatioScatter;\n","import React from 'react';\nimport useWindowSize from '../../hooks/useWindowSize';\nimport { Col, Badge } from 'react-bootstrap';\n\nimport RatioScatter from '../../components/RatioScatter';\n\ninterface Props {\n  allColleges: Array<string[]>;\n  lastCollegeData: Array<string[]>;\n  latestName: string;\n  studentsLatestYearsAvg: string;\n  teachersLatestYearsAvg: string;\n}\n\nconst LeftBottom = ({\n  allColleges,\n  lastCollegeData,\n  latestName,\n  studentsLatestYearsAvg,\n  teachersLatestYearsAvg\n}: Props) => {\n  const latestYear = lastCollegeData.map((x) => x[0])[0];\n  const latestRatio = lastCollegeData.map((x) => x[7])[0];\n  const latestStuCount = lastCollegeData.map((x) => x[5])[0];\n\n  // Return quota or rank of student-teacher ratio based on request.\n  const stuTchLatestRatio = (req: string) => {\n    let sortedArray: Array<string[]> = [\n      ...allColleges.filter((e) => e[0] === latestYear)\n    ];\n    sortedArray.map((e) => e.unshift(e[8]));\n    sortedArray.sort().reverse();\n    sortedArray.map((e) => e.shift());\n    if (req === 'quota') {\n      return sortedArray.length;\n    } else if (req === 'rank') {\n      return sortedArray.indexOf(lastCollegeData[0]) + 1;\n    }\n  };\n\n  const stuTch108RatioAvg = (\n    Number(studentsLatestYearsAvg) / Number(teachersLatestYearsAvg)\n  ).toFixed(2);\n\n  const formatRatioScatterData = {\n    avg: [stuTch108RatioAvg, studentsLatestYearsAvg],\n    me: [latestName, latestRatio, latestStuCount],\n    others: allColleges\n      .filter((e) => e[0] === '108')\n      .filter((i) => i[4] !== latestName)\n      .map((x) => [x[4], x[7], x[5]])\n  };\n\n  const size = useWindowSize();\n\n  const buttomPartRatioScatterColLg = (size.width as any) < 1100 ? 12 : 6;\n\n  return (\n    <>\n      <Col\n        style={{\n          position: 'relative'\n        }}\n      >\n        <div style={{ position: 'absolute', right: '10%', top: '10%' }}>\n          <h5>\n            <Badge pill variant=\"danger\">\n              {latestYear}年\n            </Badge>{' '}\n          </h5>\n        </div>\n        <div\n          style={{\n            position: 'absolute',\n            left: '15%',\n            top: '0%',\n            display: 'flex',\n            flexDirection: 'column',\n            alignItems: 'center'\n          }}\n        >\n          <div\n            style={{\n              border: '1px solid grey',\n              padding: '1px',\n              borderRadius: '50%'\n            }}\n          >\n            <div\n              style={{\n                display: 'flex',\n                justifyContent: 'center',\n                alignItems: 'center',\n                height: '55px',\n                width: '55px',\n                border: '1px solid black',\n                borderRadius: '50%',\n                fontSize: '20px'\n              }}\n            >\n              {stuTchLatestRatio('rank')}{' '}\n              <span style={{ fontSize: '13px' }}>名</span>\n            </div>\n          </div>\n          <div style={{ marginTop: '-3px' }}>\n            <span style={{ fontSize: '10px' }}>\n              共{stuTchLatestRatio('quota')}所學校\n            </span>\n          </div>\n        </div>\n        <div style={{ position: 'absolute', left: '22%', top: '38%' }}>\n          <h3>\n            生師比 &nbsp;&nbsp;\n            <span style={{ fontSize: '40px' }}>{latestRatio}</span> &nbsp; %\n          </h3>\n        </div>\n\n        <div style={{ position: 'absolute', left: '20%', top: '70%' }}>\n          <h6>\n            每校平均生師比 &nbsp;\n            <span style={{ fontSize: '20px' }}>{stuTch108RatioAvg}</span>\n            %&nbsp;<span style={{ fontSize: '13px' }}> (108年)</span>\n          </h6>\n        </div>\n      </Col>\n      <Col lg={buttomPartRatioScatterColLg}>\n        <RatioScatter formatRatioScatterData={formatRatioScatterData} />\n      </Col>\n    </>\n  );\n};\n\nexport default LeftBottom;\n","import React, { useEffect, useState } from 'react';\nimport ReactECharts from 'echarts-for-react';\n\ninterface Props {\n  formatPieChartData: Array<any[]>;\n}\n\nconst PieChart = ({ formatPieChartData }: Props) => {\n  console.log('pie formatPieChartData', formatPieChartData);\n\n  const eChartsRef = React.useRef(null as any);\n  const [option, setOption] = useState({});\n\n  useEffect(() => {\n    setOption(defaultOption);\n  }, []);\n\n  const latestYear = formatPieChartData.map((e) => e[0])[0];\n  const defaultOption = {\n    legend: {},\n    tooltip: {\n      trigger: 'axis'\n      //   showContent: false\n    },\n    dataset: {\n      source: [\n        ['學年', ...formatPieChartData.map((e) => e[0] + ' 學年')],\n        ['學生', ...formatPieChartData.map((e) => e[1])],\n        ['老師', ...formatPieChartData.map((e) => e[2])]\n      ]\n    },\n    xAxis: { type: 'category' },\n    yAxis: { gridIndex: 0 },\n    grid: { top: '60%' },\n    series: [\n      {\n        type: 'line',\n        smooth: true,\n        seriesLayoutBy: 'row',\n        emphasis: { focus: 'series' }\n      },\n      {\n        type: 'line',\n        smooth: true,\n        seriesLayoutBy: 'row',\n        emphasis: { focus: 'series' }\n      },\n      {\n        name: '每校平均學生',\n        type: 'line',\n        data: formatPieChartData.map((e) => e[3].studentsAvg),\n        smooth: true,\n        seriesLayoutBy: 'row',\n        emphasis: { focus: 'series' }\n      },\n      {\n        name: '每校平均老師',\n        type: 'line',\n        data: formatPieChartData.map((e) => e[3].teachersAvg),\n        smooth: true,\n        seriesLayoutBy: 'row',\n        emphasis: { focus: 'series' }\n      },\n      {\n        type: 'pie',\n        id: 'pie',\n        radius: '35%',\n        center: ['50%', '32%'],\n        emphasis: { focus: 'data' },\n        label: {\n          formatter: `{b}: {@${latestYear + ' 學年'}} 人  ({d}%)`\n        },\n        encode: {\n          itemName: '學年',\n          value: latestYear + ' 學年',\n          tooltip: latestYear + ' 學年'\n        }\n      }\n    ]\n  };\n\n  //   const [count, setCount] = useState(0);\n  function onChartReady(echarts: any) {\n    console.log('echarts is ready', echarts);\n  }\n  //   function onChartClick(param: any, echarts: any) {\n  //     console.log(param, echarts);\n  //     setCount(count + 1);\n  //   }\n  function onChartLegendselectchanged(param: any, echarts: any) {\n    console.log(param, echarts);\n  }\n\n  function onUpdateAxisPointer(event: any) {\n    if (event.axesInfo[0]) {\n      var dimensionValue = Number(event.axesInfo[0].value + 1);\n\n      const option2 = {\n        series: {\n          id: 'pie',\n          label: {\n            formatter: '{b}: {@[' + dimensionValue + ']} 人 ({d}%)'\n          },\n          encode: {\n            value: dimensionValue,\n            tooltip: dimensionValue\n          }\n        }\n      };\n\n      if (eChartsRef && eChartsRef.current) {\n        eChartsRef.current?.getEchartsInstance().setOption(option2);\n      }\n    }\n  }\n\n  return (\n    <>\n      <ReactECharts\n        ref={eChartsRef}\n        option={option}\n        style={{ width: '80%', height: '90%', paddingTop: '5%' }}\n        onChartReady={onChartReady}\n        onEvents={{\n          //   click: onChartClick,\n          legendselectchanged: onChartLegendselectchanged,\n          updateAxisPointer: onUpdateAxisPointer\n        }}\n      />\n      ),\n      {/* <div>Click Count: {count}</div> */}\n    </>\n  );\n};\n\nexport default PieChart;\n","import React from 'react';\nimport PieChart from '../../components/PieChart';\n\ninterface Props {\n  collegeData: Array<string[]>;\n  studentsAllYearsAvg: Array<string>;\n  teachersAllYearsAvg: Array<string>;\n}\n\nconst Right = ({\n  collegeData,\n  studentsAllYearsAvg,\n  teachersAllYearsAvg\n}: Props) => {\n  const formatPieChartData = collegeData.map((yearCollegeData) => {\n    const index: number =\n      yearCollegeData[0] === '108'\n        ? 0\n        : yearCollegeData[0] === '107'\n        ? 1\n        : yearCollegeData[0] === '106'\n        ? 2\n        : -1;\n    return [\n      yearCollegeData[0],\n      Number(yearCollegeData[5].replace(',', '')),\n      Number(yearCollegeData[6]),\n      {\n        studentsAvg: Number(studentsAllYearsAvg[index]),\n        teachersAvg: Number(teachersAllYearsAvg[index])\n      }\n    ];\n  }) as any;\n\n  return (\n    <>\n      <PieChart formatPieChartData={formatPieChartData} />\n    </>\n  );\n};\n\nexport default Right;\n","import React from 'react';\nimport useWindowSize from '../hooks/useWindowSize';\nimport { Col, Row, Container, Badge } from 'react-bootstrap';\nimport { Link } from 'react-router-dom';\nimport BackArrowIcon from '../assets/images/back-arrow.svg';\n\nimport LeftTop from '../layout/CollegeDetail/LeftTop';\nimport LeftMid from '../layout/CollegeDetail/LeftMid';\nimport LeftBottom from '../layout/CollegeDetail/LeftBottom';\nimport Right from '../layout/CollegeDetail/Right';\n\ninterface Props {\n  allColleges: Array<string[]>;\n  match: {\n    params: {\n      id: string;\n    };\n  };\n}\n\nconst CollegeDetail = ({ match: { params }, allColleges }: Props) => {\n  const { id } = params;\n\n  const collegeData = allColleges.filter((e) => e[3] === id);\n  const lastCollegeData = collegeData.slice(-1);\n  const latestName = lastCollegeData.map((x) => x[4])[0];\n\n  // Calculate average all of students or teacher (country) base on year.\n  const clacAvg = (year: string, stuOrTch: string) => {\n    let indexOfData: number;\n    if (stuOrTch === 'stu') {\n      indexOfData = 5;\n    } else if (stuOrTch === 'tch') {\n      indexOfData = 6;\n    }\n    const whichYearData = allColleges.filter((e) => e[0] === year);\n    const CountArray = whichYearData.map((x) =>\n      Number(x[indexOfData].replace(',', ''))\n    );\n    const Avg = (\n      [0, ...CountArray].reduce((acc, cur) => acc + cur) / whichYearData.length\n    ).toFixed(1);\n\n    return Avg;\n  };\n\n  const studentsAllYearsAvg: Array<string> = [\n    clacAvg('108', 'stu'),\n    clacAvg('107', 'stu'),\n    clacAvg('106', 'stu')\n  ];\n  const teachersAllYearsAvg: Array<string> = [\n    clacAvg('108', 'tch'),\n    clacAvg('107', 'tch'),\n    clacAvg('106', 'tch')\n  ];\n\n  const size = useWindowSize();\n  const bottomPartFlexDirection = (size.width as any) < 1100 ? 'column' : 'row';\n\n  return (\n    <>\n      <Container\n        style={{\n          maxWidth: '100%',\n          height: '100vh'\n        }}\n      >\n        <Row>\n          <Col\n            style={{\n              height: '100vh',\n              padding: '0',\n              display: 'flex',\n              justifyContent: 'center',\n              alignItems: 'center',\n              borderRight: '1px solid black'\n            }}\n          >\n            <Link to=\"/\">\n              <img\n                src={BackArrowIcon}\n                alt=\"back-icon\"\n                style={{\n                  position: 'absolute',\n                  top: '20px',\n                  left: '20px',\n                  zIndex: 2\n                }}\n              />\n            </Link>\n            <Container\n              style={{\n                display: 'grid',\n                flexDirection: 'column',\n                gridTemplateRows: '.8fr .6fr 1fr',\n                height: '100%'\n              }}\n            >\n              <Row>\n                <LeftTop />\n              </Row>\n              <Row\n                style={{\n                  justifyContent: 'center',\n                  alignItems: 'center',\n                  position: 'relative'\n                }}\n              >\n                <LeftMid\n                  lastCollegeData={lastCollegeData}\n                  latestName={latestName}\n                />\n              </Row>\n              <Row\n                style={{\n                  flexDirection: bottomPartFlexDirection\n                }}\n              >\n                <LeftBottom\n                  allColleges={allColleges}\n                  lastCollegeData={lastCollegeData}\n                  latestName={latestName}\n                  studentsLatestYearsAvg={studentsAllYearsAvg[0]}\n                  teachersLatestYearsAvg={teachersAllYearsAvg[0]}\n                />\n              </Row>\n            </Container>\n          </Col>\n          <Col\n            style={{\n              height: '100vh',\n              display: 'flex',\n              justifyContent: 'center',\n              alignItems: 'center'\n            }}\n          >\n            <Right\n              collegeData={collegeData}\n              studentsAllYearsAvg={studentsAllYearsAvg}\n              teachersAllYearsAvg={teachersAllYearsAvg}\n            />\n          </Col>\n        </Row>\n      </Container>\n    </>\n  );\n};\n\nexport default CollegeDetail;\n","import React, { useState, useEffect } from 'react';\n\nimport { Switch, BrowserRouter as Router, Route } from 'react-router-dom';\nimport './App.css';\nimport 'bootstrap/dist/css/bootstrap.min.css';\n\nimport Home from './pages/Home';\nimport CollegeDetail from './pages/CollegeDetail';\n\nfunction App() {\n  const [allColleges, setAllColeges] = useState([]);\n\n  const getAllColleges = async () => {\n    const range = `A:I`;\n    const res = await fetch(\n      `${process.env.REACT_APP_GOOGLE_SHEET_API_BASE}/${process.env.REACT_APP_GOOGLE_SHEET_ID}/values/${range}?key=${process.env.REACT_APP_GOOGLE_API_KEY}`\n    );\n    const { values } = await res.json();\n    setAllColeges(values);\n  };\n\n  useEffect(() => {\n    getAllColleges();\n  }, []);\n\n  return (\n    <div className=\"App\">\n      <Router>\n        <Switch>\n          <Route\n            exact\n            path=\"/\"\n            component={(props: any) => <Home {...{ ...props, allColleges }} />}\n          />\n          <Route\n            path=\"/detail/:id\"\n            component={(props: any) => (\n              <CollegeDetail {...{ ...props, allColleges }} />\n            )}\n          />\n        </Switch>\n      </Router>\n    </div>\n  );\n}\n\nexport default App;\n","import { ReportHandler } from 'web-vitals';\n\nconst reportWebVitals = (onPerfEntry?: ReportHandler) => {\n  if (onPerfEntry && onPerfEntry instanceof Function) {\n    import('web-vitals').then(({ getCLS, getFID, getFCP, getLCP, getTTFB }) => {\n      getCLS(onPerfEntry);\n      getFID(onPerfEntry);\n      getFCP(onPerfEntry);\n      getLCP(onPerfEntry);\n      getTTFB(onPerfEntry);\n    });\n  }\n};\n\nexport default reportWebVitals;\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport App from './App';\nimport reportWebVitals from './reportWebVitals';\n\nReactDOM.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>,\n  document.getElementById('root')\n);\n\n// If you want to start measuring performance in your app, pass a function\n// to log results (for example: reportWebVitals(console.log))\n// or send to an analytics endpoint. Learn more: https://bit.ly/CRA-vitals\nreportWebVitals();\n"],"sourceRoot":""}